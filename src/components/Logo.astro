---
// Logo component with Android-style design that matches the provided image
export interface Props {
  size?: 'sm' | 'md' | 'lg';
  showText?: boolean;
}

const { size = 'md', showText = true } = Astro.props;

const sizeClasses = {
  sm: 'w-6 h-6',
  md: 'w-8 h-8',
  lg: 'w-12 h-12'
};

const textSizeClasses = {
  sm: 'text-lg',
  md: 'text-xl',
  lg: 'text-3xl'
};
---

<div class="flex flex-col items-center space-y-2">
  <!-- Android Robot Head -->
  <div class={`${sizeClasses[size]} relative flex items-center justify-center`}>
    <!-- Android Robot Head SVG -->
    <svg 
      viewBox="0 0 100 100" 
      class="w-full h-full text-gray-900 dark:text-white"
      fill="currentColor"
      aria-hidden="true"
    >
      <!-- Main head shape (rounded rectangle/half circle) -->
      <path d="M15 45 Q15 25 50 25 Q85 25 85 45 L85 75 Q85 85 75 85 L25 85 Q15 85 15 75 Z" />
      
      <!-- Left antenna -->
      <line x1="30" y1="25" x2="25" y2="15" stroke="currentColor" stroke-width="4" stroke-linecap="round"/>
      
      <!-- Right antenna -->
      <line x1="70" y1="25" x2="75" y2="15" stroke="currentColor" stroke-width="4" stroke-linecap="round"/>
      
      <!-- Left eye -->
      <circle cx="35" cy="45" r="4" fill="white"/>
      
      <!-- Right eye -->
      <circle cx="65" cy="45" r="4" fill="white"/>
    </svg>
  </div>
  
  <!-- DexAPK Text -->
  {showText && (
    <span class={`${textSizeClasses[size]} font-bold text-gray-900 dark:text-white tracking-tight leading-none`}>
      DexAPK
    </span>
  )}
</div>