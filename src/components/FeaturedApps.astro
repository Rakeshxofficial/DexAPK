---
import { getFeaturedApps } from '../lib/supabase.js';
import ImageOptimized from './ImageOptimized.astro';

// Helper functions for dynamic styling
function getGradientForCategory(category) {
  const gradients = {
    'Productivity': 'from-gray-100 via-gray-200 to-gray-300 dark:from-gray-700 dark:via-gray-600 dark:to-gray-500',
    'Music': 'from-green-500 via-green-600 to-black',
    'Video': 'from-red-500 via-red-600 to-black',
    'Entertainment': 'from-black via-red-600 to-red-500',
    'Social': 'from-purple-500 via-pink-500 to-blue-500',
    'Photography': 'from-blue-500 via-cyan-500 to-teal-500',
    'Games': 'from-gray-900 via-green-600 to-cyan-500',
    'Media': 'from-orange-400 via-yellow-500 to-red-500'
  };
  return gradients[category] || 'from-blue-500 via-purple-500 to-pink-500';
}

function getCategoryColor(category) {
  const colors = {
    'Productivity': 'text-gray-600 dark:text-gray-400',
    'Music': 'text-purple-600 dark:text-purple-400',
    'Video': 'text-red-600 dark:text-red-400',
    'Entertainment': 'text-red-600 dark:text-red-400',
    'Social': 'text-green-600 dark:text-green-400',
    'Photography': 'text-blue-600 dark:text-blue-400',
    'Games': 'text-orange-600 dark:text-orange-400',
    'Media': 'text-orange-600 dark:text-orange-400'
  };
  return colors[category] || 'text-blue-600 dark:text-blue-400';
}

function getIconForCategory(category) {
  const icons = {
    'Productivity': '<svg fill="currentColor" viewBox="0 0 24 24"><path d="M22.282 9.821a5.985 5.985 0 0 0-.516-4.91 6.046 6.046 0 0 0-6.51-2.9A6.065 6.065 0 0 0 4.981 4.18a5.985 5.985 0 0 0-3.998 2.9 6.046 6.046 0 0 0 .743 7.097 5.98 5.98 0 0 0 .51 4.911 6.078 6.078 0 0 0 6.525 2.9 5.991 5.991 0 0 0 4.306 1.83c.969 0 1.904-.233 2.78-.681a6.001 6.001 0 0 0 3.913-2.9 6.065 6.065 0 0 0-.743-7.097zM12 15.31c-1.827 0-3.31-1.483-3.31-3.31s1.483-3.31 3.31-3.31 3.31 1.483 3.31 3.31-1.483 3.31-3.31 3.31z"/></svg>',
    'Music': '<svg fill="currentColor" viewBox="0 0 24 24"><path d="M12 0C5.4 0 0 5.4 0 12s5.4 12 12 12 12-5.4 12-12S18.66 0 12 0zm5.521 17.34c-.24.359-.66.48-1.021.24-2.82-1.74-6.36-2.101-10.561-1.141-.418.122-.779-.179-.899-.539-.12-.421.18-.78.54-.9 4.56-1.021 8.52-.6 11.64 1.32.42.18.479.659.301 1.02zm1.44-3.3c-.301.42-.841.6-1.262.3-3.239-1.98-8.159-2.58-11.939-1.38-.479.12-1.02-.12-1.14-.6-.12-.48.12-1.021.6-1.141C9.6 9.9 15 10.561 18.72 12.84c.361.181.54.78.241 1.2zm.12-3.36C15.24 8.4 8.82 8.16 5.16 9.301c-.6.179-1.2-.181-1.38-.721-.18-.601.18-1.2.72-1.381 4.26-1.26 11.28-1.02 15.721 1.621.539.3.719 1.02.42 1.56-.299.421-1.02.599-1.559.3z"/></svg>',
    'Video': '<svg fill="currentColor" viewBox="0 0 24 24"><path d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"/></svg>',
    'Entertainment': '<svg fill="currentColor" viewBox="0 0 24 24"><path d="M5.398 0v.006c3.028 8.556 5.37 15.175 8.348 23.596 2.344.058 4.85.398 4.854.398-2.8-7.924-5.923-16.747-8.487-24zm8.489 0v9.63L18.6 22.951c-.043-7.86-.004-15.71.002-22.95zM5.398 1.05V24c2.873-.086 5.81-.406 8.487-.448V1.05z"/></svg>',
    'Social': '<svg fill="currentColor" viewBox="0 0 24 24"><path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z"/></svg>',
    'Photography': '<svg fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"/><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"/></svg>',
    'Games': '<div class="text-center"><div class="text-green-400 font-bold text-xs mb-1">BIG</div><div class="w-6 h-6 sm:w-8 sm:h-8 border-2 border-green-400 rounded-lg flex items-center justify-center"><div class="w-1.5 h-1.5 sm:w-2 sm:h-2 bg-green-400 rounded-full"></div></div><div class="text-green-400 font-bold text-xs mt-1">SMALL</div></div>',
    'Media': '<svg fill="currentColor" viewBox="0 0 24 24"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 14.5v-9l6 4.5-6 4.5z"/></svg>'
  };
  return icons[category] || '<svg fill="currentColor" viewBox="0 0 24 24"><path d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z"/></svg>';
}

// Fetch featured apps from Supabase
let featuredApps = []; 
try {
  featuredApps = await getFeaturedApps(8); // Reduced from 10 to 8 to decrease initial load
} catch (error) {
  console.error('Error loading featured apps:', error);
  // Fallback to empty array if database is not available
  featuredApps = [];
}
---

<section id="featured-apps" class="py-8 sm:py-12 bg-white dark:bg-gray-900">
  <div class="max-w-7xl mx-auto px-3 sm:px-6 lg:px-8 contain-content">
    <div class="text-center mb-8">
      <h2 class="text-2xl sm:text-3xl font-bold tracking-tight text-gray-900 dark:text-white">
        Latest MOD APKs
      </h2>
      <p class="mt-3 text-base text-gray-600 dark:text-gray-300">
        Discover the most popular modified applications with premium features
      </p>
    </div>

    <div class="grid grid-cols-2 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-3 sm:gap-4" aria-label="Featured MOD APKs">
      
      {featuredApps.length > 0 ? featuredApps.map((app, index) => (
        <article 
          class="app-card group relative bg-white dark:bg-gray-800 rounded-2xl shadow-md hover:shadow-xl transition-all duration-300 overflow-hidden border border-gray-100 dark:border-gray-700 focus-within:ring-2 focus-within:ring-blue-500 focus-within:ring-offset-2 dark:focus-within:ring-offset-gray-900"
          data-app-name={app.name}
          data-app-category={app.category}
        >
          <a 
            href={`/${app.slug}`} 
            class="block w-full h-full focus:outline-none"
            aria-label={`Download ${app.name} v${app.version} MOD APK - ${app.category} app with premium features unlocked`}
            role="button"
            tabindex="0"
            data-app-slug={app.slug} 
          >
            <div class="relative h-32 sm:h-40 bg-gray-100 dark:bg-gray-700 flex items-center justify-center overflow-hidden group-hover:scale-105 transition-transform duration-300">
              <!-- Status Badges -->
              <div class="absolute top-2 left-2 flex gap-1.5 z-10">
                <span class="bg-blue-500 text-white text-xs font-semibold px-2 py-0.5 rounded-full flex items-center gap-1 shadow-sm">
                  <svg class="w-2.5 h-2.5" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
                  </svg>
                  <span class="sr-only">New release</span>
                  NEW
                </span>
                <span class="bg-red-500 text-white text-xs font-semibold px-2 py-0.5 rounded-full shadow-sm">
                  <span class="sr-only">Modified version</span>
                  MOD
                </span>
              </div>
              
              <!-- App Icon - Much Larger -->
              <div class="w-20 h-20 sm:w-24 sm:h-24 bg-white dark:bg-gray-800 rounded-2xl sm:rounded-3xl flex items-center justify-center shadow-lg overflow-hidden">
                {app.icon ? (
                  <>
                    <ImageOptimized 
                      src={app.icon} 
                      alt={`${app.name} icon`}
                      class="w-full h-full object-cover rounded-2xl sm:rounded-3xl"
                      loading="lazy"
                      width={96}
                      height={96}
                      isOffScreen={index > 4}
                      onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';"
                    />
                    <div class="w-12 h-12 sm:w-16 sm:h-16 text-gray-700 dark:text-gray-300 hidden" set:html={getIconForCategory(app.category)} aria-hidden="true"></div>
                  </>
                ) : (
                  <div set:html={getIconForCategory(app.category)} class="w-12 h-12 sm:w-16 sm:h-16 text-gray-700 dark:text-gray-300" aria-hidden="true"></div>
                )}
              </div>
              
              <!-- Hover Overlay -->
              <div class="absolute inset-0 bg-black/0 group-hover:bg-black/5 transition-colors duration-300 flex items-center justify-center opacity-0 group-hover:opacity-100">
                <div class="bg-white/20 backdrop-blur-sm rounded-full p-3 transform scale-0 group-hover:scale-100 transition-transform duration-300">
                  <svg class="w-6 h-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10"/>
                  </svg>
                </div>
              </div>
            </div>
            
            <!-- App Details -->
            <div class="p-3 group-hover:bg-gray-50 dark:group-hover:bg-gray-700 transition-colors duration-300">
              <h3 class="text-sm sm:text-base font-semibold text-gray-900 dark:text-white mb-1 truncate group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors duration-300">
                {app.name}
              </h3>
              <p class={`text-xs sm:text-sm font-medium mb-2 ${getCategoryColor(app.category)} transition-colors duration-300`}>
                {app.category}
              </p>
              <div class="flex items-center justify-between text-xs text-gray-600 dark:text-gray-400">
                <div class="flex items-center gap-1" title={`Version ${app.version}`}>
                  <svg class="w-3 h-3 text-yellow-500" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
                    <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                  </svg>
                  <span class="text-xs">{app.version}</span>
                </div>
                <div class="flex items-center gap-1" title={`File size: ${app.size}`}>
                  <svg class="w-3 h-3" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10"/>
                  </svg>
                  <span class="text-xs">{app.size}</span>
                </div>
              </div>
            </div>
            
            <!-- Screen Reader Content -->
            <div class="sr-only">
              Rating: {app.rating} out of 5 stars with {app.votes} votes.
              Last updated: {app.last_updated}.
              Publisher: {app.publisher}.
              Requirements: {app.requirements}.
              Click to download and view more details.
            </div>
          </a>
          
          <!-- Loading State Indicator -->
          <div class="loading-indicator absolute inset-0 bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm hidden items-center justify-center">
            <div class="flex items-center gap-2 text-blue-600 dark:text-blue-400">
              <svg class="animate-spin w-5 h-5" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
              </svg>
              <span class="text-sm font-medium">Loading...</span>
            </div>
          </div>
        </article>
      )) : (
        <!-- Fallback content if no apps are loaded -->
        <div class="col-span-full text-center py-12" role="status" aria-live="polite">
          <div class="text-gray-500 dark:text-gray-400">
            <svg class="w-16 h-16 mx-auto mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z"/>
            </svg>
            <h3 class="text-lg font-medium mb-2">No apps available</h3>
            <p class="text-sm">Please connect to Supabase to load app data.</p>
          </div>
        </div>
      )}

    </div>

    <div class="text-center mt-8 sm:mt-12">
      <a 
        href="/apps" 
        class="inline-flex items-center px-6 sm:px-8 py-2.5 sm:py-3 border border-transparent text-sm sm:text-base font-medium rounded-xl text-white bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-900"
        aria-label="View all MOD APKs - Browse complete collection"
      >
        View All MODs
        <svg class="ml-2 -mr-1 w-4 h-4 sm:w-5 sm:h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
        </svg>
      </a>
    </div>
  </div>
</section>

<!-- Toast Notification for Accessibility Feedback -->
<div id="accessibility-toast" class="fixed bottom-4 left-4 right-4 sm:left-auto sm:right-4 sm:w-96 bg-blue-600 text-white px-4 py-3 rounded-lg shadow-lg transform translate-y-full opacity-0 pointer-events-none transition-all duration-300 z-50" role="alert" aria-live="assertive" aria-atomic="true">
  <div class="flex items-center gap-3">
    <svg class="w-5 h-5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
      <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"/>
    </svg>
    <div class="flex-1">
      <p class="font-medium" id="toast-title">Loading app details...</p>
      <p class="text-sm opacity-90" id="toast-message">Please wait while we prepare the download page.</p>
    </div>
    <button type="button" class="text-white hover:text-gray-200 transition-colors duration-200" onclick="hideToast()" aria-label="Close notification">
      <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"/>
      </svg>
    </button>
  </div>
</div>

<script>
  // Enhanced accessibility and interaction features
  document.addEventListener('DOMContentLoaded', function() {
    const appCards = document.querySelectorAll('.app-card');
    const toast = document.getElementById('accessibility-toast');
    const toastTitle = document.getElementById('toast-title');
    const toastMessage = document.getElementById('toast-message');
    
    // Use event delegation instead of attaching listeners to each card
    const cardsContainer = document.querySelector('.grid');
    if (cardsContainer) {
      cardsContainer.addEventListener('click', function(event) {
        // Find the closest app card link
        const link = event.target.closest('.app-card a');
        if (!link) return;
        
        // Prevent default to show loading state first
        event.preventDefault();
        
        const card = link.closest('.app-card');
        const loadingIndicator = card.querySelector('.loading-indicator');
        const appName = card.dataset.appName;
        const appCategory = card.dataset.appCategory;
        
        // Show loading state
        if (loadingIndicator) {
          // Batch DOM operations with requestAnimationFrame
          requestAnimationFrame(() => {
            loadingIndicator.classList.remove('hidden');
            loadingIndicator.classList.add('flex');
          });
        }
        
        // Add pressed state
        // Store layout measurements before making changes
        const cardRect = card.getBoundingClientRect();
        // Use transform instead of classes that might trigger layout
        requestAnimationFrame(() => {
          card.style.transform = 'scale(0.95)';
          card.style.boxShadow = 'var(--shadow-sm)';
        });
        
        // Show accessibility toast
        showToast(
          `Opening ${appName}`,
          `Loading ${appCategory} app details...`
        );
        
        // Navigate to the app page after a short delay
        setTimeout(() => {
          window.location.href = link.href;
        }, 300);
      });
      
      // Keyboard navigation
      cardsContainer.addEventListener('keydown', function(event) {
        const link = event.target.closest('.app-card a');
        if (!link) return;
        
        if (event.key === 'Enter' || event.key === ' ') {
          event.preventDefault();
          link.click();
        }
      });
    }
    
    // Toast notification functions
    function showToast(title, message) {
      // Batch read operations
      const toastRect = toast.getBoundingClientRect();
      
      // Batch write operations
      requestAnimationFrame(() => {
        toastTitle.textContent = title;
        toastMessage.textContent = message;
        toast.classList.remove('translate-y-full', 'opacity-0', 'pointer-events-none');
        toast.classList.add('translate-y-0', 'opacity-100', 'pointer-events-auto');
      });
      
      // Auto-hide after 5 seconds
      setTimeout(() => {
        hideToast();
      }, 5000);
    }
    
    window.hideToast = function() {
      // Use CSS properties that don't trigger layout
      requestAnimationFrame(() => {
        toast.style.transform = 'translateY(100%)';
        toast.style.opacity = '0';
        toast.style.pointerEvents = 'none';
        
        // Clean up classes after animation completes
        setTimeout(() => {
          toast.classList.remove('translate-y-0', 'opacity-100', 'pointer-events-auto');
          toast.classList.add('translate-y-full', 'opacity-0', 'pointer-events-none');
          toast.style.transform = '';
          toast.style.opacity = '';
          toast.style.pointerEvents = '';
        }, 300);
      });
    };
    
    // Screen reader announcements
    // Simplified announcer with debounce
    const announceToScreenReader = (() => {
      let timeout;
      let announcer;
      
      return function(message) {
        if (!announcer) {
          announcer = document.createElement('div');
          announcer.setAttribute('aria-live', 'polite');
          announcer.setAttribute('aria-atomic', 'true');
          announcer.className = 'sr-only';
          document.body.appendChild(announcer);
        }
        
        clearTimeout(timeout);
        timeout = setTimeout(() => {
          announcer.textContent = message;
        }, 100);
      };
    })();
    
    // Keyboard navigation improvements
    // Use a more efficient approach with debouncing
    let keyNavTimeout;
    document.addEventListener('keydown', function(event) {
      clearTimeout(keyNavTimeout);
      keyNavTimeout = setTimeout(() => {
        const focusedElement = document.activeElement;
        if (!focusedElement.closest('.app-card a')) return;
        
        const appCards = Array.from(document.querySelectorAll('.app-card a'));
        const currentIndex = appCards.indexOf(focusedElement);
        
        if (currentIndex === -1) return;
        
        let nextIndex;
        
        switch(event.key) {
          case 'ArrowRight':
            event.preventDefault();
            nextIndex = (currentIndex + 1) % appCards.length;
            appCards[nextIndex].focus();
            break;
          case 'ArrowLeft':
            event.preventDefault();
            nextIndex = currentIndex === 0 ? appCards.length - 1 : currentIndex - 1;
            appCards[nextIndex].focus();
            break;
          case 'ArrowDown':
          case 'ArrowUp':
          case 'Home':
          case 'End':
            // Handle these keys only when needed to avoid unnecessary calculations
            event.preventDefault();
            
            if (event.key === 'Home') {
              appCards[0].focus();
            } else if (event.key === 'End') {
              appCards[appCards.length - 1].focus();
            } else {
              // Store layout measurements to avoid forced reflow
              let cardsPerRow;
              // Use a cached value if available
              if (!window.cachedCardsPerRow) {
                // Read layout once and cache the result
                const containerWidth = cardsContainer.offsetWidth;
                const cardWidth = appCards[0].offsetWidth;
                window.cachedCardsPerRow = Math.floor(containerWidth / cardWidth);
                
                // Update cached value on resize
                if (!window.resizeListenerAdded) {
                  window.addEventListener('resize', () => {
                    window.cachedCardsPerRow = null;
                  }, { passive: true });
                  window.resizeListenerAdded = true;
                }
              }
              cardsPerRow = window.cachedCardsPerRow || 4; // Fallback value
              
              if (event.key === 'ArrowDown') {
                nextIndex = Math.min(currentIndex + cardsPerRow, appCards.length - 1);
              } else { // ArrowUp
                nextIndex = Math.max(currentIndex - cardsPerRow, 0);
              }
              appCards[nextIndex].focus();
            }
            break;
        }
      }, 10);
    }, { passive: false });
    
    // Reduced motion support
    if (window.matchMedia('(prefers-reduced-motion: reduce)').matches) {
      const style = document.createElement('style');
      style.textContent = `
        .app-card * {
          transition-duration: 0.01ms !important;
          animation-duration: 0.01ms !important;
        }
      `;
      document.head.appendChild(style);
    }
  });
</script>

<style>
  /* Add containment for better performance */
  .contain-content {
    contain: layout style content;
  }
  
  /* Enhanced accessibility styles */
  .app-card {
    position: relative;
    contain: layout style content;
    will-change: transform, opacity;
  }
  
  .app-card:focus-within {
    transform: translateY(-2px);
  }
  
  .app-card a:focus {
    outline: none;
  }
  
  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .app-card {
      border-width: 2px;
      border-color: currentColor;
    }
    
    .app-card:hover,
    .app-card:focus-within {
      background-color: highlight;
      color: highlighttext;
    }
  }
  
  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .app-card,
    .app-card *:not(.loading-indicator) {
      transition: none !important;
      animation: none !important;
    }
  }
  
  /* Custom focus styles for better visibility */
  .app-card a:focus-visible {
    outline: 2px solid #3b82f6;
    outline-offset: 2px;
  }
  
  /* Loading state styles */
  .loading-indicator {
    backdrop-filter: blur(4px);
    will-change: opacity, transform;
  }
  
  /* Touch feedback */
  .scale-98 {
    transform: scale(0.98);
  }
  
  .scale-95 {
    transform: scale(0.95);
  }
</style>