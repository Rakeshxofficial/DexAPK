---
// Breadcrumb Navigation Component
// This component generates SEO-friendly breadcrumb navigation

export interface Props {
  items: {
    label: string;
    href: string;
    current?: boolean;
  }[];
}

const { items } = Astro.props;
---

<nav class="bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700" aria-label="Breadcrumb">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="overflow-x-auto breadcrumb-container py-4">
      <ol class="flex items-center space-x-2 text-sm whitespace-nowrap min-w-max" role="list" itemscope itemtype="https://schema.org/BreadcrumbList">
        {items.map((item, index) => (
          <li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
            {index > 0 && (
              <svg class="w-4 h-4 text-gray-400 mx-1" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
                <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
              </svg>
            )}
            
            {item.current ? (
              <span 
                class="font-medium text-gray-900 dark:text-white inline-flex items-center min-h-[32px]" 
                aria-current="page"
                itemprop="name"
              >
                {item.label}
              </span>
            ) : (
              <a 
                href={item.href} 
                class="text-gray-500 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-200 inline-flex items-center min-h-[32px]"
                itemprop="item"
              >
                <span itemprop="name">{item.label}</span>
              </a>
            )}
            <meta itemprop="position" content={`${index + 1}`} />
          </li>
        ))}
      </ol>
    </div>
  </div>
</nav>

<style>
  /* Custom scrollbar for breadcrumbs */
  .breadcrumb-container {
    scrollbar-width: thin;
    scrollbar-color: rgba(156, 163, 175, 0.5) transparent;
    -ms-overflow-style: none; /* For Internet Explorer and Edge */
    position: relative;
  }
  
  /* For Webkit browsers (Chrome, Safari) */
  .breadcrumb-container::-webkit-scrollbar {
    height: 4px;
  }
  
  .breadcrumb-container::-webkit-scrollbar-track {
    background: transparent;
  }
  
  .breadcrumb-container::-webkit-scrollbar-thumb {
    background-color: rgba(156, 163, 175, 0.5);
    border-radius: 20px;
  }
  
  /* Ensure consistent height for all breadcrumb items */
  .breadcrumb-container ol li {
    display: flex;
    align-items: center;
  }
  
  /* Add fade effect to indicate scrollability */
  @media (min-width: 640px) {
    .breadcrumb-container::after {
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      height: 100%;
      width: 24px;
      background: linear-gradient(to right, transparent, var(--breadcrumb-fade-color, white));
      pointer-events: none;
      opacity: 0;
      transition: opacity 0.2s ease;
    }
    
    .breadcrumb-container:hover::after {
      opacity: 1;
    }
    
    /* Dark mode support */
    :global(.dark) .breadcrumb-container::after {
      --breadcrumb-fade-color: #1f2937;
    }
  }
  
  /* Add smooth scrolling for better UX */
  @media (prefers-reduced-motion: no-preference) {
    .breadcrumb-container {
      scroll-behavior: smooth;
    }
  }
</style>

<script>
  // Add horizontal scroll with mouse wheel support
  document.addEventListener('DOMContentLoaded', () => {
    const breadcrumbContainers = document.querySelectorAll('.breadcrumb-container');
    
    breadcrumbContainers.forEach(container => {
      container.addEventListener('wheel', (e) => {
        if (e.deltaY !== 0) {
          e.preventDefault();
          container.scrollLeft += e.deltaY;
        }
      }, { passive: false });
      
      // Check if scrollable and add visual indicator
      function checkScrollable() {
        if (container.scrollWidth > container.clientWidth) {
          container.classList.add('is-scrollable');
        } else {
          container.classList.remove('is-scrollable');
        }
      }
      
      // Check on load and resize
      checkScrollable();
      window.addEventListener('resize', checkScrollable);
    });
  });
</script>