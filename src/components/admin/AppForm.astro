---
// Reusable app form component for both adding and editing apps
export interface Props {
  app?: any;
  mode: 'create' | 'edit';
}

const { app, mode } = Astro.props;
const isEdit = mode === 'edit';
---

<div class="bg-white dark:bg-gray-800 rounded-2xl shadow-sm border border-gray-200 dark:border-gray-700 p-8">
  <div class="flex items-center justify-between mb-8">
    <h2 class="text-2xl font-bold text-gray-900 dark:text-white">
      {isEdit ? 'Edit App' : 'Add New App'}
    </h2>
    <div class="flex items-center gap-2">
      <div class="w-3 h-3 bg-green-500 rounded-full"></div>
      <span class="text-sm text-gray-600 dark:text-gray-400">
        {isEdit ? 'Editing Mode' : 'Creation Mode'}
      </span>
    </div>
  </div>

  <form id="app-form" class="space-y-8">
    
    <!-- Basic Information Section -->
    <div class="border-b border-gray-200 dark:border-gray-700 pb-8">
      <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-6">Basic Information</h3>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <label for="name" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            App Name *
          </label>
          <input
            type="text"
            id="name"
            name="name"
            value={app?.name || ''}
            required
            class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
            placeholder="Enter app name"
          />
        </div>

        <div>
          <label for="slug" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            URL Slug *
          </label>
          <input
            type="text"
            id="slug"
            name="slug"
            value={app?.slug || ''}
            required
            class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
            placeholder="app-name-slug"
          />
          <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">
            URL-friendly version (e.g., chatgpt-premium)
          </p>
        </div>

        <div>
          <label for="version" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Version *
          </label>
          <input
            type="text"
            id="version"
            name="version"
            value={app?.version || '1.0.0'}
            required
            class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
            placeholder="1.0.0"
          />
        </div>

        <div>
          <label for="size" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            File Size *
          </label>
          <input
            type="text"
            id="size"
            name="size"
            value={app?.size || '0 MB'}
            required
            class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
            placeholder="25.5 MB"
          />
        </div>

        <div>
          <label for="category" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Category *
          </label>
          <select
            id="category"
            name="category"
            required
            class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
          >
            <option value="">Select Category</option>
            <option value="Productivity" selected={app?.category === 'Productivity'}>Productivity</option>
            <option value="Music" selected={app?.category === 'Music'}>Music</option>
            <option value="Video" selected={app?.category === 'Video'}>Video</option>
            <option value="Entertainment" selected={app?.category === 'Entertainment'}>Entertainment</option>
            <option value="Social" selected={app?.category === 'Social'}>Social</option>
            <option value="Photography" selected={app?.category === 'Photography'}>Photography</option>
            <option value="Games" selected={app?.category === 'Games'}>Games</option>
            <option value="Media" selected={app?.category === 'Media'}>Media</option>
            <option value="Apps" selected={app?.category === 'Apps'}>Apps</option>
          </select>
        </div>

        <div>
          <label for="publisher" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Publisher *
          </label>
          <input
            type="text"
            id="publisher"
            name="publisher"
            value={app?.publisher || 'Unknown'}
            required
            class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
            placeholder="Publisher Name"
          />
        </div>

        <div>
          <label for="requirements" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Requirements *
          </label>
          <input
            type="text"
            id="requirements"
            name="requirements"
            value={app?.requirements || 'Android 5.0+'}
            required
            class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
            placeholder="Android 5.0+"
          />
        </div>

        <div>
          <label for="price" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Price
          </label>
          <input
            type="text"
            id="price"
            name="price"
            value={app?.price || 'Free'}
            class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
            placeholder="Free"
          />
        </div>

        <div>
          <label for="platform" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Platform
          </label>
          <input
            type="text"
            id="platform"
            name="platform"
            value={app?.platform || 'Google Play'}
            class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
            placeholder="Google Play"
          />
        </div>

        <div>
          <label for="last_updated" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Last Updated
          </label>
          <input
            type="text"
            id="last_updated"
            name="last_updated"
            value={app?.last_updated || new Date().toLocaleDateString('en-US', { month: 'short', day: '2-digit', year: 'numeric' })}
            class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
            placeholder="Jan 01, 2025"
          />
        </div>

        <div>
          <label for="rating" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Rating (0-5)
          </label>
          <input
            type="number"
            id="rating"
            name="rating"
            min="0"
            max="5"
            step="0.1"
            value={app?.rating || 4.0}
            class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
            placeholder="4.0"
          />
        </div>

        <div>
          <label for="votes" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Vote Count
          </label>
          <input
            type="number"
            id="votes"
            name="votes"
            min="0"
            value={app?.votes || 0}
            class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
            placeholder="1000"
          />
        </div>
      </div>
    </div>

    <!-- SEO Settings Section -->
    <div class="border-b border-gray-200 dark:border-gray-700 pb-8">
      <div class="flex items-center justify-between mb-6">
        <h3 class="text-lg font-semibold text-gray-900 dark:text-white">SEO Settings</h3>
        <div class="flex items-center gap-2">
          <svg class="w-5 h-5 text-green-500" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
          </svg>
          <span class="text-sm text-green-600 dark:text-green-400 font-medium">SEO Optimized</span>
        </div>
      </div>
      
      <div class="space-y-6">
        <div>
          <label for="seo_title" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            SEO Title
          </label>
          <input
            type="text"
            id="seo_title"
            name="seo_title"
            value={app?.seo_title || ''}
            maxlength="60"
            class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
            placeholder="Auto-generated from app name if empty"
          />
          <div class="flex justify-between mt-1">
            <p class="text-xs text-gray-500 dark:text-gray-400">
              Used for page title, OG title, and Twitter title
            </p>
            <span class="text-xs text-gray-500 dark:text-gray-400" id="seo-title-count">0/60</span>
          </div>
        </div>

        <div>
          <label for="seo_description" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            SEO Description
          </label>
          <textarea
            id="seo_description"
            name="seo_description"
            rows="3"
            maxlength="160"
            class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
            placeholder="Auto-generated from app description if empty"
          >{app?.seo_description || ''}</textarea>
          <div class="flex justify-between mt-1">
            <p class="text-xs text-gray-500 dark:text-gray-400">
              Used for meta description, OG description, and Twitter description
            </p>
            <span class="text-xs text-gray-500 dark:text-gray-400" id="seo-desc-count">0/160</span>
          </div>
        </div>

        <div>
          <label for="seo_featured_image" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            SEO Featured Image
          </label>
          <input
            type="url"
            id="seo_featured_image"
            name="seo_featured_image"
            value={app?.seo_featured_image || ''}
            class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
            placeholder="https://example.com/featured-image.jpg"
          />
          <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">
            Used for OG image and Twitter card. Recommended size: 1200x630px. Falls back to app icon if empty.
          </p>
        </div>

        <div>
          <label for="seo_keywords" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            SEO Keywords
          </label>
          <input
            type="text"
            id="seo_keywords"
            name="seo_keywords"
            value={app?.seo_keywords || ''}
            class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
            placeholder="app name, category, mod apk, premium unlocked"
          />
          <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">
            Comma-separated keywords for SEO. Auto-generated if empty.
          </p>
        </div>

        <div>
          <label for="seo_canonical_url" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Canonical URL (Optional)
          </label>
          <input
            type="url"
            id="seo_canonical_url"
            name="seo_canonical_url"
            value={app?.seo_canonical_url || ''}
            class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
            placeholder="https://dexapk.com/app-slug"
          />
          <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">
            Custom canonical URL. Auto-generated from slug if empty.
          </p>
        </div>
      </div>
    </div>

    <!-- Content Section -->
    <div class="border-b border-gray-200 dark:border-gray-700 pb-8">
      <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-6">Content</h3>
      
      <!-- Description -->
      <div class="mb-6">
        <label for="description" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
          Description *
        </label>
        <textarea
          id="description"
          name="description"
          rows="4"
          required
          class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
          placeholder="Enter app description..."
        >{app?.description || ''}</textarea>
      </div>

      <!-- URLs -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
        <div>
          <label for="icon" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Icon URL
          </label>
          <input
            type="url"
            id="icon"
            name="icon"
            value={app?.icon || ''}
            class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
            placeholder="https://example.com/icon.png"
          />
        </div>

        <div>
          <label for="download_url" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Download URL
          </label>
          <input
            type="url"
            id="download_url"
            name="download_url"
            value={app?.download_url || '#'}
            class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
            placeholder="https://example.com/download"
          />
        </div>
      </div>

      <!-- Features -->
      <div class="mb-6">
        <label for="features" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
          Features (one per line)
        </label>
        <textarea
          id="features"
          name="features"
          rows="4"
          class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
          placeholder="Premium features unlocked&#10;No ads&#10;Unlimited access"
        >{app?.features ? app.features.join('\n') : ''}</textarea>
        <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">
          Enter each feature on a new line
        </p>
      </div>

      <!-- MOD Info -->
      <div class="mb-6">
        <label for="mod_info" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
          MOD Information (one per line)
        </label>
        <textarea
          id="mod_info"
          name="mod_info"
          rows="4"
          class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
          placeholder="Premium Unlocked&#10;Ad-Free Experience&#10;No Root Required"
        >{app?.mod_info ? app.mod_info.join('\n') : ''}</textarea>
        <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">
          Enter each MOD feature on a new line
        </p>
      </div>

      <!-- Screenshots -->
      <div>
        <label for="screenshots" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
          Screenshot URLs (one per line)
        </label>
        <textarea
          id="screenshots"
          name="screenshots"
          rows="3"
          class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
          placeholder="https://example.com/screenshot1.jpg&#10;https://example.com/screenshot2.jpg"
        >{app?.screenshots ? app.screenshots.join('\n') : ''}</textarea>
        <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">
          Enter each screenshot URL on a new line
        </p>
      </div>
    </div>

    <!-- Status Settings -->
    <div>
      <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-6">Status Settings</h3>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div class="flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-xl">
          <div>
            <label for="is_featured" class="text-sm font-medium text-gray-700 dark:text-gray-300">
              Featured App
            </label>
            <p class="text-xs text-gray-500 dark:text-gray-400">
              Show in featured section
            </p>
          </div>
          <label class="relative inline-flex items-center cursor-pointer">
            <input
              type="checkbox"
              id="is_featured"
              name="is_featured"
              checked={app?.is_featured || false}
              class="sr-only peer"
            />
            <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-600 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"></div>
          </label>
        </div>

        <div class="flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-xl">
          <div>
            <label for="is_active" class="text-sm font-medium text-gray-700 dark:text-gray-300">
              Active Status
            </label>
            <p class="text-xs text-gray-500 dark:text-gray-400">
              Publicly visible
            </p>
          </div>
          <label class="relative inline-flex items-center cursor-pointer">
            <input
              type="checkbox"
              id="is_active"
              name="is_active"
              checked={app?.is_active !== false}
              class="sr-only peer"
            />
            <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-600 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"></div>
          </label>
        </div>
      </div>
    </div>

    <!-- Form Actions -->
    <div class="flex items-center justify-between pt-6 border-t border-gray-200 dark:border-gray-700">
      <button
        type="button"
        onclick="window.history.back()"
        class="px-6 py-3 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-xl hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors duration-200"
      >
        Cancel
      </button>
      
      <div class="flex items-center gap-3">
        <button
          type="button"
          id="preview-btn"
          class="px-6 py-3 bg-gray-600 text-white rounded-xl hover:bg-gray-700 transition-colors duration-200"
        >
          Preview
        </button>
        
        <button
          type="submit"
          id="submit-btn"
          class="px-8 py-3 bg-blue-600 text-white rounded-xl hover:bg-blue-700 transition-colors duration-200 flex items-center gap-2"
        >
          <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
          </svg>
          {isEdit ? 'Update App' : 'Create App'}
        </button>
      </div>
    </div>
  </form>
</div>

<!-- Loading Overlay -->
<div id="loading-overlay" class="fixed inset-0 bg-black/50 backdrop-blur-sm hidden items-center justify-center z-50">
  <div class="bg-white dark:bg-gray-800 rounded-2xl p-8 max-w-sm mx-4 text-center">
    <div class="animate-spin w-12 h-12 border-4 border-blue-600 border-t-transparent rounded-full mx-auto mb-4"></div>
    <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">
      {isEdit ? 'Updating App...' : 'Creating App...'}
    </h3>
    <p class="text-gray-600 dark:text-gray-400">
      Please wait while we process your request.
    </p>
  </div>
</div>

<!-- Success/Error Toast -->
<div id="toast" class="fixed bottom-4 right-4 bg-green-600 text-white px-6 py-4 rounded-xl shadow-lg transform translate-y-full transition-transform duration-300 z-50">
  <div class="flex items-center gap-3">
    <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20">
      <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
    </svg>
    <span id="toast-message">App saved successfully!</span>
  </div>
</div>

<script>
  import { createApp, updateApp } from '../../lib/supabase.ts';

  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('app-form');
    const submitBtn = document.getElementById('submit-btn');
    const previewBtn = document.getElementById('preview-btn');
    const loadingOverlay = document.getElementById('loading-overlay');
    const toast = document.getElementById('toast');
    const toastMessage = document.getElementById('toast-message');
    
    const isEdit = submitBtn.textContent.includes('Update');
    const originalSlug = isEdit ? document.getElementById('slug').value : null;

    // Character counters for SEO fields
    const seoTitleInput = document.getElementById('seo_title');
    const seoDescInput = document.getElementById('seo_description');
    const seoTitleCount = document.getElementById('seo-title-count');
    const seoDescCount = document.getElementById('seo-desc-count');

    // Update character counts
    function updateCharCount(input, counter, max) {
      const count = input.value.length;
      counter.textContent = `${count}/${max}`;
      counter.className = count > max ? 'text-xs text-red-500' : 'text-xs text-gray-500 dark:text-gray-400';
    }

    seoTitleInput.addEventListener('input', () => updateCharCount(seoTitleInput, seoTitleCount, 60));
    seoDescInput.addEventListener('input', () => updateCharCount(seoDescInput, seoDescCount, 160));

    // Initialize character counts
    updateCharCount(seoTitleInput, seoTitleCount, 60);
    updateCharCount(seoDescInput, seoDescCount, 160);

    // Auto-generate slug from name
    const nameInput = document.getElementById('name');
    const slugInput = document.getElementById('slug');
    
    nameInput.addEventListener('input', function() {
      if (!isEdit || !slugInput.value) {
        const slug = this.value
          .toLowerCase()
          .replace(/[^a-z0-9\s-]/g, '')
          .replace(/\s+/g, '-')
          .replace(/-+/g, '-')
          .trim();
        slugInput.value = slug;
      }
    });

    // Auto-generate SEO fields
    function autoGenerateSEO() {
      const name = nameInput.value;
      const version = document.getElementById('version').value;
      const category = document.getElementById('category').value;
      const description = document.getElementById('description').value;

      // Auto-generate SEO title if empty
      if (!seoTitleInput.value && name) {
        seoTitleInput.value = `${name} MOD APK v${version} - Premium Features Unlocked`;
        updateCharCount(seoTitleInput, seoTitleCount, 60);
      }

      // Auto-generate SEO description if empty
      if (!seoDescInput.value && name && description) {
        const shortDesc = description.length > 100 ? description.substring(0, 100) + '...' : description;
        seoDescInput.value = `Download ${name} MOD APK v${version} with premium features unlocked. ${shortDesc}`;
        updateCharCount(seoDescInput, seoDescCount, 160);
      }

      // Auto-generate keywords if empty
      const keywordsInput = document.getElementById('seo_keywords');
      if (!keywordsInput.value && name && category) {
        keywordsInput.value = `${name.toLowerCase()}, ${category.toLowerCase()}, mod apk, premium unlocked, android app, free download`;
      }
    }

    // Trigger auto-generation when relevant fields change
    nameInput.addEventListener('blur', autoGenerateSEO);
    document.getElementById('version').addEventListener('blur', autoGenerateSEO);
    document.getElementById('category').addEventListener('change', autoGenerateSEO);
    document.getElementById('description').addEventListener('blur', autoGenerateSEO);

    // Form submission
    form.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      showLoading();
      
      try {
        const formData = new FormData(form);
        
        // Process array fields properly
        const featuresText = formData.get('features') || '';
        const modInfoText = formData.get('mod_info') || '';
        const screenshotsText = formData.get('screenshots') || '';
        
        const appData = {
          slug: formData.get('slug'),
          name: formData.get('name'),
          version: formData.get('version'),
          size: formData.get('size'),
          category: formData.get('category'),
          publisher: formData.get('publisher'),
          requirements: formData.get('requirements'),
          price: formData.get('price') || 'Free',
          platform: formData.get('platform') || 'Google Play',
          last_updated: formData.get('last_updated'),
          rating: parseFloat(formData.get('rating')) || 4.0,
          votes: parseInt(formData.get('votes')) || 0,
          description: formData.get('description'),
          icon: formData.get('icon') || '',
          download_url: formData.get('download_url') || '#',
          features: featuresText ? featuresText.split('\n').filter(f => f.trim()) : [],
          mod_info: modInfoText ? modInfoText.split('\n').filter(f => f.trim()) : [],
          screenshots: screenshotsText ? screenshotsText.split('\n').filter(f => f.trim()) : [],
          is_featured: formData.has('is_featured'),
          is_active: formData.has('is_active'),
          // SEO fields
          seo_title: formData.get('seo_title') || null,
          seo_description: formData.get('seo_description') || null,
          seo_featured_image: formData.get('seo_featured_image') || null,
          seo_keywords: formData.get('seo_keywords') || null,
          seo_canonical_url: formData.get('seo_canonical_url') || null
        };

        console.log('Form data being submitted:', appData);

        let result;
        if (isEdit) {
          console.log('Updating app with slug:', originalSlug);
          result = await updateApp(originalSlug, appData);
        } else {
          console.log('Creating new app');
          result = await createApp(appData);
        }

        console.log('Operation result:', result);

        hideLoading();

        if (result.success) {
          showToast(`App ${isEdit ? 'updated' : 'created'} successfully!`, 'success');
          
          // Redirect after success
          setTimeout(() => {
            window.location.href = '/admin/apps';
          }, 1500);
        } else {
          showToast(result.error || 'An error occurred', 'error');
        }
      } catch (error) {
        hideLoading();
        showToast('An unexpected error occurred', 'error');
        console.error('Form submission error:', error);
      }
    });

    // Preview functionality
    previewBtn.addEventListener('click', function() {
      const slug = document.getElementById('slug').value;
      if (slug) {
        window.open(`/${slug}`, '_blank');
      } else {
        showToast('Please enter a slug first', 'error');
      }
    });

    function showLoading() {
      loadingOverlay.classList.remove('hidden');
      loadingOverlay.classList.add('flex');
    }

    function hideLoading() {
      loadingOverlay.classList.add('hidden');
      loadingOverlay.classList.remove('flex');
    }

    function showToast(message, type = 'success') {
      toastMessage.textContent = message;
      
      // Update toast styling based on type
      if (type === 'error') {
        toast.className = toast.className.replace('bg-green-600', 'bg-red-600');
      } else {
        toast.className = toast.className.replace('bg-red-600', 'bg-green-600');
      }
      
      toast.classList.remove('translate-y-full');
      toast.classList.add('translate-y-0');
      
      setTimeout(() => {
        toast.classList.remove('translate-y-0');
        toast.classList.add('translate-y-full');
      }, 3000);
    }
  });
</script>