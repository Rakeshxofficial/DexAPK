---
export const prerender = true;

import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import BreadcrumbNav from '../../components/BreadcrumbNav.astro';
import ImageOptimized from '../../components/ImageOptimized.astro';
import MarkdownRenderer from '../../components/MarkdownRenderer.astro';
import { getAllBlogPosts, getBlogPostBySlug, getRelatedBlogPosts } from '../../lib/supabase.js';

export async function getStaticPaths() {
  try {
    const blogPosts = await getAllBlogPosts();
    return blogPosts.map(post => ({
      params: { slug: post.slug },
      props: { post }
    }));
  } catch (error) {
    console.error('Error generating static paths for blog:', error);
    return [];
  }
}

const { slug } = Astro.params;
const { post } = Astro.props;

// If post not found, return 404
if (!post) {
  return new Response(null, {
    status: 404,
    statusText: 'Not found'
  });
}

// Get related posts
let relatedPosts = [];
try {
  relatedPosts = await getRelatedBlogPosts(post.slug, post.category, 3);
} catch (error) {
  console.error('Error loading related posts:', error);
}

// SEO data with fallbacks
const seoTitle = post.seo_title || `${post.title} - DexAPK Blog`;
const seoDescription = post.seo_description || post.excerpt || `${post.title} - Read the latest insights and tutorials on DexAPK Blog.`;
const seoKeywords = post.seo_keywords || `${post.title.toLowerCase()}, ${post.category.toLowerCase()}, android, apk, blog, tutorial`;
const canonicalUrl = `https://dexapk.com/blog/${post.slug}`;

// Prepare SEO data for Layout
const seoData = {
  title: seoTitle,
  description: seoDescription,
  keywords: seoKeywords,
  canonicalUrl: canonicalUrl,
  featuredImage: post.thumbnail_image || '/web-app-manifest-512x512.png',
  type: 'article'
};

// Function to calculate reading time
function calculateReadingTime(content: string): number {
  const wordsPerMinute = 200;
  const wordCount = content.split(/\s+/).length;
  return Math.ceil(wordCount / wordsPerMinute);
}

// Function to format date
function formatDate(dateString: string): string {
  return new Date(dateString).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}

const readingTime = post.reading_time || calculateReadingTime(post.content);
---

<Layout seoData={seoData}>
  {post && (
    <Fragment slot="head">
      <!-- Preload critical resources -->
      {post.thumbnail_image && <link rel="preload" href={post.thumbnail_image} as="image" />}

      <!-- Article Schema -->
      <script type="application/ld+json" set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": "BlogPosting",
        "headline": post.title,
        "description": post.excerpt || seoDescription,
        "image": post.thumbnail_image || '/web-app-manifest-512x512.png',
        "author": {
          "@type": "Person",
          "name": post.author
        },
        "publisher": {
          "@type": "Organization",
          "name": "DexAPK",
          "logo": {
            "@type": "ImageObject",
            "url": "https://dexapk.com/web-app-manifest-512x512.png"
          }
        },
        "datePublished": post.published_date,
        "dateModified": post.updated_at || post.published_date,
        "mainEntityOfPage": {
          "@type": "WebPage",
          "@id": canonicalUrl
        },
        "articleSection": post.category,
        "keywords": post.tags ? post.tags.join(', ') : seoKeywords,
        "wordCount": post.content.split(/\s+/).length,
        "timeRequired": `PT${readingTime}M`
      })} />

      <!-- Breadcrumb Schema -->
      <script type="application/ld+json" set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": "BreadcrumbList",
        "itemListElement": [
          {
            "@type": "ListItem",
            "position": 1,
            "name": "Home",
            "item": "https://dexapk.com"
          },
          {
            "@type": "ListItem",
            "position": 2,
            "name": "Blog",
            "item": "https://dexapk.com/blog"
          },
          {
            "@type": "ListItem",
            "position": 3,
            "name": post.title,
            "item": canonicalUrl
          }
        ]
      })} />
    </Fragment>
  )}

  <Header />
  
  <main class="min-h-screen bg-gray-50 dark:bg-gray-900">
    
    <!-- Enhanced Breadcrumbs -->
    <div class="breadcrumb-wrapper">
      <BreadcrumbNav 
        items={[
          { label: 'Home', href: '/' },
          { label: 'Blog', href: '/blog' },
          { label: post.title, href: `/blog/${post.slug}`, current: true }
        ]}
      />
    </div>

    <!-- Article Header -->
    <article class="bg-white dark:bg-gray-800 py-8 sm:py-12">
      <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        
        <!-- Article Meta -->
        <div class="text-center mb-8">
          <div class="flex items-center justify-center mb-4">
            <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200">
              {post.category}
            </span>
          </div>
          
          <!-- Article Title -->
          <h1 class="text-3xl sm:text-4xl lg:text-5xl font-bold text-gray-900 dark:text-white mb-6 leading-tight">
            {post.title}
          </h1>
          
          <!-- Article Info -->
          <div class="flex flex-wrap items-center justify-center gap-4 sm:gap-6 text-sm text-gray-600 dark:text-gray-400 mb-8">
            <div class="flex items-center gap-2">
              <div class="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center">
                <span class="text-white text-sm font-bold">{post.author.charAt(0).toUpperCase()}</span>
              </div>
              <span class="font-medium text-gray-900 dark:text-white">{post.author}</span>
            </div>
            <div class="flex items-center gap-1">
              <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v14a2 2 0 002 2z"/>
              </svg>
              <time datetime={post.published_date}>{formatDate(post.published_date)}</time>
            </div>
            <div class="flex items-center gap-1">
              <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
              </svg>
              <span>{readingTime} min read</span>
            </div>
          </div>
        </div>

        <!-- Thumbnail Image -->
        {post.thumbnail_image && (
          <div class="mb-8">
            <div class="aspect-video bg-gray-200 dark:bg-gray-700 rounded-2xl overflow-hidden">
              <ImageOptimized 
                src={post.thumbnail_image} 
                alt={post.title}
                class="w-full h-full object-cover"
                loading="eager"
                fetchpriority="high"
                width={800}
                height={450}
                placeholder="blur"
                quality={90}
              />
            </div>
          </div>
        )}

      </div>
    </article>

    <!-- Article Content -->
    <section class="py-8 sm:py-12">
      <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
          
          <!-- Main Content -->
          <div class="lg:col-span-3">
            <div class="bg-white dark:bg-gray-800 rounded-2xl p-8 border border-gray-200 dark:border-gray-700">
              <!-- Article Content with Markdown -->
              <MarkdownRenderer content={post.content} generateToc={true} />
              
              <!-- Tags -->
              {post.tags && post.tags.length > 0 && (
                <div class="mt-8 pt-8 border-t border-gray-200 dark:border-gray-700">
                  <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Tags</h3>
                  <div class="flex flex-wrap gap-2">
                    {post.tags.map(tag => (
                      <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200">
                        #{tag}
                      </span>
                    ))}
                  </div>
                </div>
              )}
              
              <!-- Share Section -->
              <div class="mt-8 pt-8 border-t border-gray-200 dark:border-gray-700">
                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Share this article</h3>
                <div class="flex items-center space-x-4">
                  <a 
                    href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(post.title)}&url=${encodeURIComponent(canonicalUrl)}`}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="inline-flex items-center px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors duration-200"
                  >
                    <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
                    </svg>
                    Share on X
                  </a>
                  
                  <a 
                    href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(canonicalUrl)}`}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200"
                  >
                    <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
                    </svg>
                    Share on Facebook
                  </a>
                  
                  <button 
                    onclick="navigator.clipboard.writeText(window.location.href)"
                    class="inline-flex items-center px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors duration-200"
                  >
                    <svg class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"/>
                    </svg>
                    Copy Link
                  </button>
                </div>
              </div>
            </div>
          </div>

          <!-- Sidebar -->
          <div class="lg:col-span-1">
            <div class="sticky top-8 space-y-6">
              
              <!-- Author Info -->
              <div class="bg-white dark:bg-gray-800 rounded-2xl p-6 border border-gray-200 dark:border-gray-700">
                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">About the Author</h3>
                <div class="flex items-center mb-4">
                  <div class="w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center mr-4">
                    <span class="text-white text-lg font-bold">{post.author.charAt(0).toUpperCase()}</span>
                  </div>
                  <div>
                    <p class="font-semibold text-gray-900 dark:text-white">{post.author}</p>
                    <p class="text-sm text-gray-500 dark:text-gray-400">Content Writer</p>
                  </div>
                </div>
                <p class="text-gray-600 dark:text-gray-400 text-sm">
                  Expert in Android applications and mobile technology, sharing insights about the latest MOD APKs and app developments.
                </p>
              </div>
              
              <!-- Related Posts -->
              {relatedPosts.length > 0 && (
                <div class="bg-white dark:bg-gray-800 rounded-2xl p-6 border border-gray-200 dark:border-gray-700">
                  <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Related Articles</h3>
                  <div class="space-y-4">
                    {relatedPosts.map(relatedPost => (
                      <a href={`/blog/${relatedPost.slug}`} class="block p-3 rounded-xl hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors duration-200">
                        <h4 class="font-medium text-gray-900 dark:text-white mb-2 line-clamp-2">
                          {relatedPost.title}
                        </h4>
                        <div class="flex items-center text-sm text-gray-500 dark:text-gray-400">
                          <time datetime={relatedPost.published_date}>{formatDate(relatedPost.published_date)}</time>
                          <span class="mx-2">•</span>
                          <span>{relatedPost.reading_time || calculateReadingTime(relatedPost.content)} min read</span>
                        </div>
                      </a>
                    ))}
                  </div>
                </div>
              )}

              <!-- Back to Blog -->
              <div class="bg-white dark:bg-gray-800 rounded-2xl p-6 border border-gray-200 dark:border-gray-700">
                <a 
                  href="/blog"
                  class="inline-flex items-center w-full justify-center px-4 py-3 bg-blue-600 text-white rounded-xl hover:bg-blue-700 transition-colors duration-200"
                >
                  <svg class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16l-4-4m0 0l4-4m-4 4h18"/>
                  </svg>
                  Back to Blog
                </a>
              </div>

            </div>
          </div>

        </div>
      </div>
    </section>

  </main>
  
  <Footer />
</Layout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  /* Ensure minimum touch target sizes */
  a, button {
    min-width: 44px;
    min-height: 44px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }
  
  /* Improved focus styles */
  a:focus, button:focus {
    outline: 2px solid #3b82f6;
    outline-offset: 2px;
  }
  
  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    *, *::before, *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }
  }
</style>