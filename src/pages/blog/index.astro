---
export const prerender = true;

import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import BreadcrumbNav from '../../components/BreadcrumbNav.astro';
import ImageOptimized from '../../components/ImageOptimized.astro';
import { getAllBlogPosts, getFeaturedBlogPosts } from '../../lib/supabase.js';

// Fetch all blog posts
let allBlogPosts = [];
let featuredPosts = [];
try {
  allBlogPosts = await getAllBlogPosts();
  featuredPosts = await getFeaturedBlogPosts(3);
} catch (error) {
  console.error('Error loading blog posts:', error);
  allBlogPosts = [];
  featuredPosts = [];
}

const title = "Blog - DexAPK";
const description = "Stay updated with the latest news, tutorials, and insights about Android apps, MOD APKs, and mobile technology.";

// Get unique categories
const categories = [...new Set(allBlogPosts.map(post => post.category))];

// Function to calculate reading time
function calculateReadingTime(content: string): number {
  const wordsPerMinute = 200;
  const wordCount = content.split(/\s+/).length;
  return Math.ceil(wordCount / wordsPerMinute);
}

// Function to format date
function formatDate(dateString: string): string {
  return new Date(dateString).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}
---

<Layout title={title} description={description}>
  <Header />
  
  <main class="min-h-screen bg-gray-50 dark:bg-gray-900">
    
    <!-- Enhanced Breadcrumbs -->
    <div class="breadcrumb-wrapper">
      <BreadcrumbNav 
        items={[
          { label: 'Home', href: '/' },
          { label: 'Blog', href: '/blog', current: true }
        ]}
      />
    </div>

    <!-- Page Header -->
    <section class="bg-gradient-to-r from-blue-600 to-purple-600 py-12 sm:py-16">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <div class="flex items-center justify-center mb-6">
          <div class="w-16 h-16 bg-white/20 rounded-2xl flex items-center justify-center backdrop-blur-sm">
            <svg class="w-8 h-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"/>
            </svg>
          </div>
        </div>
        <h1 class="text-3xl sm:text-4xl lg:text-5xl font-bold text-white mb-4">
          DexAPK Blog
        </h1>
        <p class="text-xl text-blue-100 max-w-3xl mx-auto">
          Stay updated with the latest news, tutorials, and insights about Android apps and mobile technology
        </p>
        <div class="mt-6 flex items-center justify-center text-blue-100">
          <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
            <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
          </svg>
          <span class="text-lg font-medium">{allBlogPosts.length} Articles Published</span>
        </div>
      </div>
    </section>

    <!-- Featured Posts -->
    {featuredPosts.length > 0 && (
      <section class="py-8 bg-white dark:bg-gray-800">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-6">Featured Articles</h2>
          
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {featuredPosts.map(post => (
              <article class="group bg-white dark:bg-gray-800 rounded-2xl shadow-md hover:shadow-xl transition-all duration-300 overflow-hidden border border-gray-200 dark:border-gray-700">
                <a href={`/blog/${post.slug}`} class="block">
                  <div class="relative h-48 bg-gray-200 dark:bg-gray-700 overflow-hidden">
                    {post.thumbnail_image ? (
                      <ImageOptimized 
                        src={post.thumbnail_image} 
                        alt={post.title}
                        class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                        loading="lazy"
                        width={400}
                        height={200}
                      />
                    ) : (
                      <div class="w-full h-full bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center">
                        <svg class="w-16 h-16 text-white/50" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"/>
                        </svg>
                      </div>
                    )}
                    <div class="absolute top-4 left-4">
                      <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200">
                        Featured
                      </span>
                    </div>
                  </div>
                  
                  <div class="p-6">
                    <div class="flex items-center text-sm text-gray-500 dark:text-gray-400 mb-3">
                      <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200 mr-3">
                        {post.category}
                      </span>
                      <time datetime={post.published_date}>{formatDate(post.published_date)}</time>
                    </div>
                    
                    <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-3 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors duration-200">
                      {post.title}
                    </h3>
                    
                    {post.excerpt && (
                      <p class="text-gray-600 dark:text-gray-400 mb-4 line-clamp-3">
                        {post.excerpt}
                      </p>
                    )}
                    
                    <div class="flex items-center justify-between text-sm text-gray-500 dark:text-gray-400">
                      <span>By {post.author}</span>
                      <span>{post.reading_time || calculateReadingTime(post.content)} min read</span>
                    </div>
                  </div>
                </a>
              </article>
            ))}
          </div>
        </div>
      </section>
    )}

    <!-- Filters -->
    <section class="bg-gray-50 dark:bg-gray-900 py-6">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4">
          
          <!-- Search -->
          <div class="flex-1 max-w-md">
            <label for="search-blog" class="sr-only">Search blog posts</label>
            <div class="relative">
              <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <svg class="w-5 h-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                </svg>
              </div>
              <input
                type="text"
                id="search-blog"
                class="w-full pl-10 pr-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
                placeholder="Search blog posts..."
                aria-label="Search for blog posts"
              />
            </div>
          </div>

          <!-- Category Filter -->
          <div>
            <label for="category-filter" class="sr-only">Filter by category</label>
            <select
              id="category-filter"
              class="px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
              aria-label="Filter posts by category"
            >
              <option value="">All Categories</option>
              {categories.map(category => (
                <option value={category}>{category}</option>
              ))}
            </select>
          </div>

          <!-- Sort Filter -->
          <div>
            <label for="sort-filter" class="sr-only">Sort posts</label>
            <select
              id="sort-filter"
              class="px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
              aria-label="Sort posts"
            >
              <option value="newest">Newest First</option>
              <option value="oldest">Oldest First</option>
              <option value="title">Title A-Z</option>
              <option value="reading-time">Reading Time</option>
            </select>
          </div>

        </div>
      </div>
    </section>

    <!-- Blog Posts Grid -->
    <section class="py-8 sm:py-12">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        
        <!-- Results Info -->
        <div class="flex items-center justify-between mb-6">
          <p class="text-gray-600 dark:text-gray-400" id="blog-results-count" aria-live="polite">
            Showing <span id="showing-blog-count">{allBlogPosts.length}</span> of <span id="total-blog-count">{allBlogPosts.length}</span> posts
          </p>
        </div>

        <!-- Posts Container -->
        <div id="blog-posts-container" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" aria-label="Blog posts collection">
          
          {allBlogPosts.length > 0 ? allBlogPosts.map((post, index) => (
            <article 
              class="blog-post-card group bg-white dark:bg-gray-800 rounded-2xl shadow-md hover:shadow-xl transition-all duration-300 overflow-hidden border border-gray-200 dark:border-gray-700 focus-within:ring-2 focus-within:ring-blue-500 focus-within:ring-offset-2 dark:focus-within:ring-offset-gray-900"
              data-post-title={post.title}
              data-post-category={post.category}
              data-post-date={post.published_date}
              data-post-reading-time={post.reading_time || calculateReadingTime(post.content)}
            >
              <a 
                href={`/blog/${post.slug}`} 
                class="block w-full h-full focus:outline-none"
                aria-label={`Read ${post.title} - ${post.category} article by ${post.author}`}
              >
                <div class="relative h-48 bg-gray-200 dark:bg-gray-700 overflow-hidden">
                  {post.thumbnail_image ? (
                    <ImageOptimized 
                      src={post.thumbnail_image} 
                      alt={post.title}
                      class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                      loading="lazy"
                      width={400}
                      height={200}
                      isOffScreen={index > 5}
                    />
                  ) : (
                    <div class="w-full h-full bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center">
                      <svg class="w-16 h-16 text-white/50" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"/>
                      </svg>
                    </div>
                  )}
                  
                  {post.is_featured && (
                    <div class="absolute top-4 left-4">
                      <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200">
                        Featured
                      </span>
                    </div>
                  )}
                </div>
                
                <div class="p-6">
                  <div class="flex items-center text-sm text-gray-500 dark:text-gray-400 mb-3">
                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200 mr-3">
                      {post.category}
                    </span>
                    <time datetime={post.published_date}>{formatDate(post.published_date)}</time>
                  </div>
                  
                  <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-3 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors duration-200">
                    {post.title}
                  </h3>
                  
                  {post.excerpt && (
                    <p class="text-gray-600 dark:text-gray-400 mb-4 line-clamp-3">
                      {post.excerpt}
                    </p>
                  )}
                  
                  <div class="flex items-center justify-between text-sm text-gray-500 dark:text-gray-400">
                    <span>By {post.author}</span>
                    <span>{post.reading_time || calculateReadingTime(post.content)} min read</span>
                  </div>
                </div>
                
                <!-- Screen Reader Content -->
                <div class="sr-only">
                  Published on {formatDate(post.published_date)} by {post.author}.
                  Category: {post.category}.
                  Estimated reading time: {post.reading_time || calculateReadingTime(post.content)} minutes.
                  Click to read the full article.
                </div>
              </a>
            </article>
          )) : (
            <div class="col-span-full text-center py-12" role="status" aria-live="polite">
              <div class="text-gray-500 dark:text-gray-400">
                <svg class="w-16 h-16 mx-auto mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"/>
                </svg>
                <h3 class="text-lg font-medium mb-2">No blog posts available</h3>
                <p class="text-sm">Please connect to Supabase to load blog data.</p>
              </div>
            </div>
          )}

        </div>

      </div>
    </section>

  </main>
  
  <Footer />
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('search-blog');
    const categoryFilter = document.getElementById('category-filter');
    const sortFilter = document.getElementById('sort-filter');
    const postsContainer = document.getElementById('blog-posts-container');
    const showingCount = document.getElementById('showing-blog-count');
    const totalCount = document.getElementById('total-blog-count');
    
    let allPosts = Array.from(document.querySelectorAll('.blog-post-card'));
    let filteredPosts = [...allPosts];
    
    // Initialize
    updateResultsCount();
    
    // Search functionality
    searchInput?.addEventListener('input', function() {
      filterAndSort();
    });
    
    // Category filter
    categoryFilter?.addEventListener('change', function() {
      filterAndSort();
    });
    
    // Sort filter
    sortFilter?.addEventListener('change', function() {
      filterAndSort();
    });
    
    function filterAndSort() {
      const searchTerm = searchInput?.value.toLowerCase() || '';
      const selectedCategory = categoryFilter?.value || '';
      const sortBy = sortFilter?.value || 'newest';
      
      // Filter posts
      filteredPosts = allPosts.filter(post => {
        const postTitle = post.dataset.postTitle?.toLowerCase() || '';
        const postCategory = post.dataset.postCategory || '';
        
        const matchesSearch = !searchTerm || postTitle.includes(searchTerm);
        const matchesCategory = !selectedCategory || postCategory === selectedCategory;
        
        return matchesSearch && matchesCategory;
      });
      
      // Sort posts
      filteredPosts.sort((a, b) => {
        switch (sortBy) {
          case 'title':
            return (a.dataset.postTitle || '').localeCompare(b.dataset.postTitle || '');
          case 'oldest':
            return new Date(a.dataset.postDate || 0) - new Date(b.dataset.postDate || 0);
          case 'reading-time':
            return (parseInt(a.dataset.postReadingTime) || 0) - (parseInt(b.dataset.postReadingTime) || 0);
          case 'newest':
          default:
            return new Date(b.dataset.postDate || 0) - new Date(a.dataset.postDate || 0);
        }
      });
      
      // Update display
      updateDisplay();
      updateResultsCount();
      
      // Announce to screen readers
      announceToScreenReader(`Showing ${filteredPosts.length} blog posts`);
    }
    
    function updateDisplay() {
      // Hide all posts
      allPosts.forEach(post => {
        post.style.display = 'none';
      });
      
      // Show filtered posts
      filteredPosts.forEach((post, index) => {
        post.style.display = 'block';
        post.style.order = index;
      });
    }
    
    function updateResultsCount() {
      if (showingCount && totalCount) {
        showingCount.textContent = filteredPosts.length;
        totalCount.textContent = allPosts.length;
      }
    }
    
    function announceToScreenReader(message) {
      const announcement = document.createElement('div');
      announcement.setAttribute('aria-live', 'polite');
      announcement.setAttribute('aria-atomic', 'true');
      announcement.className = 'sr-only';
      announcement.textContent = message;
      
      document.body.appendChild(announcement);
      
      setTimeout(() => {
        document.body.removeChild(announcement);
      }, 1000);
    }
  });
</script>

<style>
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .blog-post-card a:focus-visible {
    outline: 2px solid #3b82f6;
    outline-offset: 2px;
  }
  
  @media (prefers-reduced-motion: reduce) {
    .blog-post-card,
    .blog-post-card * {
      transition: none !important;
      animation: none !important;
    }
  }
</style>