---
export const prerender = true;

import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import ImageOptimized from '../components/ImageOptimized.astro';
import BreadcrumbNav from '../components/BreadcrumbNav.astro';
import InternalLinkModule from '../components/InternalLinkModule.astro';
import MarkdownRenderer from '../components/MarkdownRenderer.astro';
import DynamicFAQ from '../components/DynamicFAQ.astro';
import BlogsSection from '../components/BlogsSection.astro';
import NewPosts from '../components/NewPosts.astro';
import TopCategories from '../components/TopCategories.astro';
import TopPublishers from '../components/TopPublishers.astro';
import { getAllApps, getAppBySlug, getRelatedApps } from '../lib/supabase.js';

// Function to get trending apps
async function getTrendingApps(limit = 6) {
  try {
    const allApps = await getAllApps();
    
    // Calculate trending score (rating * votes + featured bonus)
    const trendingApps = allApps
      .map(app => ({
        ...app,
        trendingScore: (app.rating * app.votes) + (app.is_featured ? 1000 : 0)
      }))
      .sort((a, b) => b.trendingScore - a.trendingScore)
      .slice(0, limit);
    
    return trendingApps;
  } catch (error) {
    console.error('Error loading trending apps:', error);
    return [];
  }
}

export async function getStaticPaths() {
  try {
    const apps = await getAllApps();
    return apps.map(app => ({
      params: { slug: app.slug },
      props: { app }
    }));
  } catch (error) {
    console.error('Error generating static paths:', error);
    return [];
  }
}

const { slug } = Astro.params;
const { app } = Astro.props;

// If app not found, return 404
if (!app) {
  return new Response(null, {
    status: 404,
    statusText: 'Not found'
  });
}

// Get related apps
let relatedApps = [];
try {
  relatedApps = await getRelatedApps(app.slug, app.category, 4);
} catch (error) {
  console.error('Error loading related apps:', error);
}

// Get trending apps
let trendingApps = [];
try {
  trendingApps = await getTrendingApps(6);
  // Exclude current app from trending list
  trendingApps = trendingApps.filter(trendingApp => trendingApp.slug !== app.slug);
  // Limit to 6 after filtering
  trendingApps = trendingApps.slice(0, 6);
} catch (error) {
  console.error('Error loading trending apps:', error);
}

// SEO data with fallbacks
const seoTitle = app.seo_title || `${app.name} v${app.version} MOD APK - Premium Features Unlocked`;
const seoDescription = app.seo_description || `Download ${app.name} MOD APK v${app.version} with premium features unlocked. ${app.description.substring(0, 100)}...`;
const seoKeywords = app.seo_keywords || `${app.name.toLowerCase()}, ${app.category.toLowerCase()}, mod apk, premium unlocked, android app, free download`;
const seoFeaturedImage = app.seo_featured_image || app.icon || '/favicon.svg';
const canonicalUrl = app.seo_canonical_url || `https://dexapk.com/${app.slug}`;

// Prepare SEO data for Layout
const seoData = {
  title: seoTitle,
  description: seoDescription,
  keywords: seoKeywords,
  canonicalUrl: canonicalUrl,
  featuredImage: seoFeaturedImage,
  appName: app.name,
  appVersion: app.version,
  appCategory: app.category,
  appRating: app.rating,
  appVotes: app.votes,
  appPublisher: app.publisher,
  appSize: app.size,
  lastUpdated: app.last_updated,
  type: 'product'
};

// Default article content if none provided
const defaultArticleContent = `# Introduction

${app.description}

The main objective of this exceptional application package (APK) is to enhance the quality of your experience with ${app.name}. One possible solution could be to enable individuals to establish unique and captivating interactions with their favorite apps, thereby unlocking unexplored opportunities.

You can be reassured that it incorporates supplementary characteristics that will enhance your overall user experience. The ${app.name} MOD APK provides users with premium features that are typically locked behind a paywall in the official version.

## Key Features

${app.features && app.features.length > 0 ? app.features.map(feature => `- ${feature}`).join('\n') : '- Premium features unlocked\n- Enhanced user experience\n- No limitations'}

## What's New in v${app.version}

- Enhanced performance and stability
- Improved user interface
- Bug fixes and optimizations
- New premium features added
- Better compatibility with latest Android versions

## Installation Guide

1. **Download the APK** - Click the download button above to get the ${app.name} MOD APK file.
2. **Enable Unknown Sources** - Go to Settings > Security > Unknown Sources and enable it.
3. **Install the APK** - Locate the downloaded file and tap to install.
4. **Enjoy Premium Features** - Open the app and enjoy all premium features unlocked!

## Conclusion

${app.name} MOD APK offers an exceptional experience with all premium features unlocked for free. Whether you're looking for enhanced functionality, ad-free experience, or premium content access, this app provides everything you need without any limitations. Download now and experience the full potential of ${app.name} on your Android device.`;

const articleContent = app.article_content || defaultArticleContent;

// Generate dynamic FAQs
const dynamicFAQs = app ? [
  {
    question: `What is ${app.name} MOD APK?`,
    answer: `${app.name} MOD APK is a modified version of the original ${app.name} app that provides premium features unlocked for free. It offers enhanced functionality and removes limitations present in the standard version.`
  },
  {
    question: `Is ${app.name} MOD APK safe to download?`,
    answer: `Yes, our ${app.name} MOD APK is thoroughly tested and scanned for malware. We ensure all our APK files are safe and secure for download and installation.`
  },
  {
    question: `How do I install ${app.name} MOD APK?`,
    answer: `To install ${app.name} MOD APK, first enable "Unknown Sources" in your Android settings, then download the APK file and tap to install it on your device.`
  },
  {
    question: `What are the system requirements for ${app.name}?`,
    answer: `${app.name} requires ${app.requirements} to run properly on your Android device.`
  },
  {
    question: `Can I update ${app.name} MOD APK?`,
    answer: `You can update ${app.name} MOD APK by downloading the latest version from our website. Make sure to uninstall the previous version before installing the new one.`
  }
] : [];
---

<Layout seoData={seoData}>
  <!-- External CSS -->
  <link rel="stylesheet" href="/src/assets/fonts.css" slot="head" />
  <link rel="stylesheet" href="/src/assets/styles.css" slot="head" />
  
  {app && (
    <Fragment slot="head">
      <!-- Preload critical resources -->
      {app.icon && <link rel="preload" href={app.icon} as="image" />}
      {app.screenshots && app.screenshots[0] && <link rel="preload" href={app.screenshots[0]} as="image" fetchpriority="high" />}

      <!-- FAQ Schema -->
      <script type="application/ld+json" set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": "FAQPage",
        "mainEntity": dynamicFAQs.map(faq => ({
          "@type": "Question",
          "name": faq.question,
          "acceptedAnswer": {
            "@type": "Answer",
            "text": faq.answer
          }
        }))
      })} />

      <!-- Breadcrumb Schema -->
      <script type="application/ld+json" set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": "BreadcrumbList",
        "itemListElement": [
          {
            "@type": "ListItem",
            "position": 1,
            "name": "Home",
            "item": "https://dexapk.com"
          },
          {
            "@type": "ListItem",
            "position": 2,
            "name": "Apps",
            "item": "https://dexapk.com/apps"
          },
          {
            "@type": "ListItem",
            "position": 3,
            "name": app.category,
            "item": `https://dexapk.com/categories/${app.category.toLowerCase()}`
          },
          {
            "@type": "ListItem",
            "position": 4,
            "name": app.name,
            "item": `https://dexapk.com/${app.slug}`
          }
        ]
      })} />

      <!-- SoftwareApplication Schema -->
      <script type="application/ld+json" set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": "SoftwareApplication",
        "name": app.name,
        "applicationCategory": "MobileApplication",
        "applicationSubCategory": app.category,
        "operatingSystem": "Android",
        "offers": {
          "@type": "Offer",
          "price": "0",
          "priceCurrency": "USD"
        },
        "aggregateRating": {
          "@type": "AggregateRating",
          "ratingValue": app.rating,
          "ratingCount": app.votes,
          "bestRating": "5",
          "worstRating": "1"
        },
        "softwareVersion": app.version,
        "fileSize": app.size,
        "datePublished": app.created_at || new Date().toISOString(),
        "dateModified": app.updated_at || new Date().toISOString(),
        "description": app.description
      })} />

      <!-- Review Schema -->
      <script type="application/ld+json" set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": "Review",
        "itemReviewed": {
          "@type": "SoftwareApplication",
          "name": app.name,
          "applicationCategory": "MobileApplication",
          "operatingSystem": "Android"
        },
        "reviewRating": {
          "@type": "Rating",
          "ratingValue": app.rating,
          "bestRating": "5",
          "worstRating": "1"
        },
        "author": {
          "@type": "Organization",
          "name": "DexAPK"
        },
        "publisher": {
          "@type": "Organization",
          "name": "DexAPK"
        }
      })} />
      
      <!-- Website Schema -->
      <script type="application/ld+json" set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": "WebSite",
        "name": "DexAPK",
        "url": "https://dexapk.com",
        "potentialAction": {
          "@type": "SearchAction",
          "target": "https://dexapk.com/search?q={search_term_string}",
          "query-input": "required name=search_term_string"
        }
      })} />
    </Fragment>
  )}

  <Header />
  
  <main id="main-content" class="min-h-screen bg-gray-50 dark:bg-gray-900">
    
    <!-- Enhanced Breadcrumbs with Schema.org markup -->
    <div class="breadcrumb-wrapper" role="navigation" aria-label="Breadcrumb">
      <BreadcrumbNav 
        items={[
          { label: 'Home', href: '/' },
          { label: 'Apps', href: '/apps' },
          { label: app.category, href: `/categories/${app.category.toLowerCase()}` },
          { label: app.name, href: `/${app.slug}`, current: true }
        ]}
      />
    </div>

    <!-- App Header with semantic structure -->
    <header class="app-header" role="banner">
      <div class="container">
        <div class="text-center">
          
          <!-- App Icon -->
          <div class="app-icon" data-app-icon>
            {app.icon ? (
              <>
                <ImageOptimized 
                  src={app.icon} 
                  alt={`${app.name} icon`}
                  class="app-icon-image"
                  width={128}
                  height={128}
                  loading="eager"
                  fetchpriority="high"
                  placeholder="blur"
                  quality={90}
                />
                <div class="app-icon-fallback hidden">
                  <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z"/>
                  </svg>
                </div>
              </>
            ) : (
              <svg class="app-icon-fallback" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z"/>
              </svg>
            )}
          </div>

          <!-- App Title -->
          <h1 class="app-title" data-app-name={app.name}>
            {app.custom_h1_title || `${app.name} v${app.version} MOD APK`}
          </h1>
          {app.mod_info && app.mod_info.length > 0 && (
            <p class="app-subtitle">
              {app.mod_info[0]}
            </p>
          )}

          <!-- App Meta -->
          <div class="app-meta">
            <div class="app-meta-item" data-type="version">
              <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"/>
              </svg>
              <span class="meta-value">v{app.version}</span>
            </div>
            <div class="app-meta-item" data-type="updated">
              <svg fill="currentColor" viewBox="0 0 20 20">
                <path d="M10 12a2 2 0 100-4 2 2 0 000 4z"/>
                <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd"/>
              </svg>
              <span class="meta-value">{app.last_updated}</span>
            </div>
          </div>

          <!-- Rating -->
          <div class="app-rating">
            <div class="rating-stars">
              {[1,2,3,4,5].map(star => (
                <svg class={`star ${star <= Math.floor(app.rating) ? 'filled' : 'empty'}`} fill="currentColor" viewBox="0 0 20 20">
                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                </svg>
              ))}
            </div>
            <span class="rating-text">
              {app.rating} ({app.votes.toLocaleString()} votes)
            </span>
          </div>

          <!-- Download Button -->
          {app.disable_download_page ? (
            <a
              href={app.download_url || '#'}
              id="download-button"
              class="download-button"
              target="_blank"
              rel="noopener noreferrer"
              aria-label={`Download ${app.name} v${app.version} MOD APK directly`}
              data-app-name={app.name}
              data-app-slug={app.slug}
            >
              <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10"/>
              </svg>
              Download Now
              <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
              </svg>
            </a>
          ) : (
            <a
              href={`/${app.slug}/download`}
              id="download-button"
              class="download-button"
              aria-label={`Download ${app.name} v${app.version} MOD APK`}
              data-app-name={app.name}
              data-app-slug={app.slug}
            >
              <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10"/>
              </svg>
              Download
            </a>
          )}

        </div>
      </div>
    </header>

    <!-- App Details with semantic structure -->
    <section class="app-details section" role="main">
      <div class="container">
        <div class="details-grid">
          
          <!-- Main Content -->
          <div class="main-content">
            
            <!-- App Info Cards -->
            <div class="info-cards">
              
              <!-- Version -->
              <div class="info-card">
                <div class="flex items-center">
                  <div class="info-card-icon bg-green-100">
                    <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"/>
                    </svg>
                  </div>
                  <div class="info-card-content">
                    <p class="info-card-label">Version</p>
                    <p class="info-card-value">v{app.version}</p>
                  </div>
                </div>
              </div>

              <!-- Last Updated -->
              <div class="info-card">
                <div class="flex items-center">
                  <div class="info-card-icon bg-purple-100">
                    <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
                    </svg>
                  </div>
                  <div class="info-card-content">
                    <p class="info-card-label">Last Updated</p>
                    <p class="info-card-value">{app.last_updated}</p>
                  </div>
                </div>
              </div>

              <!-- Publisher -->
              <div class="info-card">
                <div class="flex items-center">
                  <div class="info-card-icon bg-orange-100">
                    <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"/>
                    </svg>
                  </div>
                  <div class="info-card-content">
                    <p class="info-card-label">Publisher</p>
                    <a 
                      href={`/publisher/${app.publisher.toLowerCase().trim().replace(/[^a-z0-9]+/g, '-').replace(/^-|-$/g, '')}`}
                      class="info-card-value text-blue-600 hover:text-blue-800"
                    >
                      {app.publisher}
                    </a>
                  </div>
                </div>
              </div>

              <!-- Requirements -->
              <div class="info-card">
                <div class="flex items-center">
                  <div class="info-card-icon bg-red-100">
                    <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
                    </svg>
                  </div>
                  <div class="info-card-content">
                    <p class="info-card-label">Requirements</p>
                    <p class="info-card-value">{app.requirements}</p>
                  </div>
                </div>
              </div>

              <!-- Category -->
              <div class="info-card">
                <div class="flex items-center">
                  <div class="info-card-icon bg-blue-100">
                    <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"/>
                    </svg>
                  </div>
                  <div class="info-card-content">
                    <p class="info-card-label">Category</p>
                    <a 
                      href={`/categories/${app.category.toLowerCase()}`}
                      class="info-card-value text-blue-600 hover:text-blue-800"
                      data-category={app.category}
                    >
                      {app.category}
                    </a>
                  </div>
                </div>
              </div>

              <!-- Size -->
              <div class="info-card">
                <div class="flex items-center">
                  <div class="info-card-icon bg-gray-100">
                    <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4"/>
                    </svg>
                  </div>
                  <div class="info-card-content">
                    <p class="info-card-label">Size</p>
                    <p class="info-card-value">{app.size}</p>
                  </div>
                </div>
              </div>

            </div>

            <!-- Screenshots -->
            {app.screenshots && app.screenshots.length > 0 && (
              <section class="screenshots-section" aria-labelledby="screenshots-heading">
                <h2 class="screenshots-title" id="screenshots-heading">Screenshots</h2>
                <div class="screenshots-grid">
                  {app.screenshots.map((screenshot, index) => (
                    <div class="screenshot-item">
                      <ImageOptimized 
                        src={screenshot} 
                        alt={`${app.name} screenshot ${index + 1}`}
                        loading="lazy"
                        width={300}
                        height={533}
                        placeholder="dominant-color"
                        quality={85}
                        isOffScreen={false}
                      />
                    </div>
                  ))}
                </div>
              </section>
            )}

            <!-- MOD Info -->
            {app.mod_info && app.mod_info.length > 0 && (
              <details class="mod-info">
                <summary class="mod-info-summary">
                  <div class="flex items-center">
                    <div class="mod-info-icon">
                      <svg fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/>
                      </svg>
                    </div>
                    <div class="mod-info-title">MOD Info?</div>
                  </div>
                  <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
                  </svg>
                </summary>
                <div class="mod-info-content">
                  <ul class="mod-info-list">
                    {app.mod_info.map(info => (
                      <li class="mod-info-item">
                        <svg fill="currentColor" viewBox="0 0 20 20">
                          <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                        </svg>
                        {info}
                      </li>
                    ))}
                  </ul>
                </div>
              </details>
            )}

            <!-- Article Content -->
            <article class="article-content">
              <MarkdownRenderer content={articleContent} generateToc={true} />
              
              <!-- Internal linking module -->
              <InternalLinkModule 
                currentSlug={app.slug} 
                currentCategory={app.category} 
                maxLinks={5} 
                headingText="Similar Apps You Might Like"
              />
            </article>

            <!-- Dynamic FAQ -->
            <DynamicFAQ app={app} />

          </div>

          <!-- Sidebar -->
          <aside class="sidebar" role="complementary" aria-label="Related content">
              
              <!-- Related Apps -->
              <section class="sidebar-section" aria-labelledby="related-apps-heading">
                <h2 class="sidebar-title" id="related-apps-heading">Related Posts</h2>
                {relatedApps.length > 0 ? (
                  <ul class="related-apps">
                    {relatedApps.map(relatedApp => (
                      <li>
                        <a href={`/${relatedApp.slug}`} class="related-app-item">
                          <div class="related-app-icon">
                          {relatedApp.icon ? (
                            <img src={relatedApp.icon} alt={relatedApp.name} />
                          ) : (
                            <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z"/>
                            </svg>
                          )}
                        </div>
                          <div class="related-app-info">
                            <p class="related-app-name">{relatedApp.name}</p>
                            <p class="related-app-category">{relatedApp.category}</p>
                        </div>
                        </a>
                      </li>
                    ))}
                    
                    <!-- Additional internal links for SEO -->
                    <li class="mt-6 p-4 bg-gray-50 rounded-xl">
                      <div class="text-sm font-medium mb-2">Popular Categories</div>
                      <div class="flex flex-wrap gap-2">
                        {['Games', 'Productivity', 'Music', 'Social', 'Photography'].map(cat => 
                          <a href={`/categories/${cat.toLowerCase()}`} class="text-xs text-blue-600 hover:underline px-2 py-1 bg-blue-50 rounded-full">{cat} Apps</a>)}
                      </div>
                    </li>
                  </ul>
                ) : (
                  <p class="text-center py-4">No related apps found</p>
                )}
              </section>

              <!-- Trending Apps -->
              {trendingApps.length > 0 && (
                <section class="sidebar-section" aria-labelledby="trending-apps-heading">
                  <h2 class="sidebar-title flex items-center" id="trending-apps-heading">
                    <svg class="w-5 h-5 mr-2 text-red-500" fill="currentColor" viewBox="0 0 20 20">
                      <path d="M13 10V3L4 14h7v7l9-11h-7z"/>
                    </svg>
                    Trending Apps
                  </h2>
                  <ul class="trending-apps">
                    {trendingApps.map((trendingApp, index) => (
                      <li>
                        <a href={`/${trendingApp.slug}`} class="trending-app-item">
                          <div class="related-app-icon bg-gradient-to-br from-red-500 to-orange-600">
                            {trendingApp.icon ? (
                              <img src={trendingApp.icon} alt={trendingApp.name} />
                            ) : (
                              <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z"/>
                              </svg>
                            )}
                          </div>
                          <!-- Trending Position Badge -->
                          <div class={`trending-position ${
                            index === 0 ? 'bg-yellow-500' : 
                            index === 1 ? 'bg-gray-400' : 
                            index === 2 ? 'bg-orange-600' : 
                            'other'
                          }`}>
                            {index + 1}
                          </div>
                          <div class="related-app-info">
                            <p class="related-app-name">
                            {trendingApp.name}
                          </p>
                            <div class="flex items-center justify-between">
                              <p class="related-app-category">{trendingApp.category}</p>
                              <div class="flex items-center gap-1">
                                <svg class="w-3 h-3 text-yellow-500" fill="currentColor" viewBox="0 0 20 20">
                                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                              </svg>
                                <span class="text-xs font-medium">{trendingApp.rating}</span>
                              </div>
                            </div>
                          </div>
                        </a>
                      </li>
                    ))}
                    
                    <!-- View All Trending Link -->
                    <li class="mt-4 pt-4 border-t">
                      <a 
                        href="/trending" 
                        class="flex items-center justify-center w-full p-3 text-sm font-medium text-red-600 hover:text-red-800 rounded-xl"
                      >
                        <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                          <path d="M13 10V3L4 14h7v7l9-11h-7z"/>
                        </svg>
                        View All Trending Apps
                        <svg class="w-4 h-4 ml-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"/>
                        </svg>
                      </a>
                    </li>
                  </ul>
                </section>
              )}

              <!-- Recent Blog Posts -->
              <BlogsSection 
                maxBlogs={6} 
                headingText="Recent Articles" 
                showHeading={true}
              />

              <!-- New Posts Section -->
              <NewPosts 
                maxApps={5} 
                headingText="New Posts" 
                showHeading={true}
                currentSlug={app.slug}
              />

              <!-- Top Categories Section -->
              <TopCategories 
                maxCategories={6} 
                headingText="Top Categories" 
                showHeading={true}
                currentCategory={app.category}
              />

              <!-- Top Publishers Section -->
              <TopPublishers 
                maxPublishers={6} 
                headingText="Top Publishers" 
                showHeading={true}
                currentPublisher={app.publisher}
              />
          </aside>

        </div>
      </div>
    </section>

  </main>
  
  <Footer />
  
  <!-- External JavaScript -->
  <script src="/src/assets/app.js" defer></script>
</Layout>