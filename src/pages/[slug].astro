---
export const prerender = true;

import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { getAllApps, getAppBySlug, getRelatedApps } from '../lib/supabase.js';

export async function getStaticPaths() {
  try {
    const apps = await getAllApps();
    return apps.map(app => ({
      params: { slug: app.slug },
      props: { app }
    }));
  } catch (error) {
    console.error('Error generating static paths:', error);
    return [];
  }
}

const { slug } = Astro.params;
const { app } = Astro.props;

// If app not found, return 404
if (!app) {
  return new Response(null, {
    status: 404,
    statusText: 'Not found'
  });
}

// Get related apps
let relatedApps = [];
try {
  relatedApps = await getRelatedApps(app.slug, app.category, 4);
} catch (error) {
  console.error('Error loading related apps:', error);
  relatedApps = [];
}

// SEO Configuration
const seoTitle = app.seo_title || `${app.name} v${app.version} MOD APK - Premium Features Unlocked`;
const seoDescription = app.seo_description || `Download ${app.name} MOD APK v${app.version} with premium features unlocked. ${app.description.substring(0, 100)}...`;
const seoImage = app.seo_featured_image || app.icon || `${Astro.site}favicon.svg`;
const seoKeywords = app.seo_keywords || `${app.name}, MOD APK, ${app.category}, premium unlocked, android app, ${app.publisher}`;
const canonicalUrl = app.seo_canonical_url || `${Astro.site}${app.slug}`;

// Structured Data for SEO
const structuredData = {
  "@context": "https://schema.org",
  "@type": "SoftwareApplication",
  "name": app.name,
  "description": app.description,
  "applicationCategory": app.category,
  "operatingSystem": "Android",
  "offers": {
    "@type": "Offer",
    "price": app.price === 'Free' ? "0" : app.price,
    "priceCurrency": "USD"
  },
  "aggregateRating": {
    "@type": "AggregateRating",
    "ratingValue": app.rating,
    "ratingCount": app.votes,
    "bestRating": "5",
    "worstRating": "1"
  },
  "author": {
    "@type": "Organization",
    "name": app.publisher
  },
  "datePublished": app.created_at,
  "dateModified": app.updated_at,
  "version": app.version,
  "fileSize": app.size,
  "downloadUrl": app.download_url,
  "screenshot": app.screenshots || [],
  "image": app.icon,
  "url": canonicalUrl
};
---

<Layout title={seoTitle} description={seoDescription}>
  <!-- Enhanced SEO Meta Tags -->
  <Fragment slot="head">
    <!-- Basic Meta Tags -->
    <meta name="description" content={seoDescription} />
    <meta name="keywords" content={seoKeywords} />
    <meta name="author" content={app.publisher} />
    <meta name="robots" content="index, follow" />
    <meta name="googlebot" content="index, follow" />
    <meta name="bingbot" content="index, follow" />
    
    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalUrl} />
    
    <!-- Open Graph Meta Tags -->
    <meta property="og:title" content={seoTitle} />
    <meta property="og:description" content={seoDescription} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalUrl} />
    <meta property="og:image" content={seoImage} />
    <meta property="og:image:alt" content={`${app.name} MOD APK icon`} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:site_name" content="DexAPK" />
    <meta property="og:locale" content="en_US" />
    
    <!-- Twitter Card Meta Tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={seoTitle} />
    <meta name="twitter:description" content={seoDescription} />
    <meta name="twitter:image" content={seoImage} />
    <meta name="twitter:image:alt" content={`${app.name} MOD APK icon`} />
    <meta name="twitter:site" content="@DexAPK" />
    <meta name="twitter:creator" content="@DexAPK" />
    
    <!-- Additional Meta Tags -->
    <meta name="application-name" content={app.name} />
    <meta name="msapplication-TileColor" content="#3b82f6" />
    <meta name="theme-color" content="#3b82f6" />
    
    <!-- App-specific Meta Tags -->
    <meta name="mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="default" />
    <meta name="apple-mobile-web-app-title" content={app.name} />
    
    <!-- Geo Meta Tags -->
    <meta name="geo.region" content="US" />
    <meta name="geo.placename" content="United States" />
    
    <!-- Content Meta Tags -->
    <meta name="rating" content="general" />
    <meta name="distribution" content="global" />
    <meta name="revisit-after" content="7 days" />
    
    <!-- Structured Data -->
    <script type="application/ld+json" set:html={JSON.stringify(structuredData)} />
    
    <!-- Preload Critical Resources -->
    <link rel="preload" href={app.icon} as="image" />
    
    <!-- DNS Prefetch for External Resources -->
    <link rel="dns-prefetch" href="//fonts.googleapis.com" />
    <link rel="dns-prefetch" href="//fonts.gstatic.com" />
  </Fragment>

  <Header />
  
  <main class="min-h-screen bg-gray-50 dark:bg-gray-900">
    
    <!-- Breadcrumbs -->
    <nav class="bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700" aria-label="Breadcrumb">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <ol class="flex items-center space-x-2 py-4 text-sm" role="list">
          <li>
            <a href="/" class="text-gray-500 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-200" aria-label="Go to homepage">
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
                <path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"/>
              </svg>
              <span class="sr-only">Home</span>
            </a>
          </li>
          <li class="flex items-center">
            <svg class="w-4 h-4 text-gray-400" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
              <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
            </svg>
            <a href={`/categories/${app.category.toLowerCase()}`} class="ml-2 text-gray-500 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-200">
              {app.category}
            </a>
          </li>
          <li class="flex items-center">
            <svg class="w-4 h-4 text-gray-400" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
              <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
            </svg>
            <span class="ml-2 font-medium text-gray-900 dark:text-white" aria-current="page">{app.name}</span>
          </li>
        </ol>
      </div>
    </nav>

    <!-- App Header -->
    <section class="bg-white dark:bg-gray-800 py-8 sm:py-12">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex flex-col lg:flex-row gap-8">
          
          <!-- App Icon and Basic Info -->
          <div class="flex flex-col sm:flex-row gap-6 lg:flex-col lg:w-80">
            <div class="flex-shrink-0">
              <div class="w-32 h-32 sm:w-40 sm:h-40 lg:w-48 lg:h-48 bg-gradient-to-br from-blue-500 to-purple-600 rounded-3xl flex items-center justify-center shadow-2xl overflow-hidden">
                {app.icon ? (
                  <img 
                    src={app.icon} 
                    alt={`${app.name} icon`}
                    class="w-full h-full object-cover rounded-3xl"
                    loading="eager"
                    onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';"
                  />
                ) : null}
                <svg class="w-20 h-20 sm:w-24 sm:h-24 lg:w-28 lg:h-28 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z"/>
                </svg>
              </div>
            </div>
            
            <!-- Download Button -->
            <div class="flex-1 lg:flex-none lg:w-full">
              <a 
                href={app.download_url}
                class="w-full inline-flex items-center justify-center px-8 py-4 bg-gradient-to-r from-green-600 to-blue-600 text-white font-bold text-lg rounded-2xl shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800"
                aria-label={`Download ${app.name} v${app.version} MOD APK`}
              >
                <svg class="w-6 h-6 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10"/>
                </svg>
                Download MOD APK
              </a>
              
              <!-- App Stats -->
              <div class="grid grid-cols-3 gap-4 mt-6 p-4 bg-gray-50 dark:bg-gray-700 rounded-xl">
                <div class="text-center">
                  <div class="text-2xl font-bold text-gray-900 dark:text-white">{app.rating}</div>
                  <div class="text-xs text-gray-600 dark:text-gray-400">Rating</div>
                  <div class="flex items-center justify-center mt-1">
                    {[1,2,3,4,5].map(star => (
                      <svg class={`w-3 h-3 ${star <= Math.floor(app.rating) ? 'text-yellow-400' : 'text-gray-300'}`} fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                      </svg>
                    ))}
                  </div>
                </div>
                <div class="text-center">
                  <div class="text-2xl font-bold text-gray-900 dark:text-white">{app.votes.toLocaleString()}</div>
                  <div class="text-xs text-gray-600 dark:text-gray-400">Downloads</div>
                </div>
                <div class="text-center">
                  <div class="text-2xl font-bold text-gray-900 dark:text-white">{app.size}</div>
                  <div class="text-xs text-gray-600 dark:text-gray-400">Size</div>
                </div>
              </div>
            </div>
          </div>

          <!-- App Details -->
          <div class="flex-1">
            <div class="flex items-start justify-between mb-4">
              <div>
                <h1 class="text-3xl sm:text-4xl font-bold text-gray-900 dark:text-white mb-2">
                  {app.name}
                </h1>
                <div class="flex items-center gap-4 text-sm text-gray-600 dark:text-gray-400">
                  <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200">
                    {app.category}
                  </span>
                  <span>v{app.version}</span>
                  <span>by {app.publisher}</span>
                </div>
              </div>
              
              {app.is_featured && (
                <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200">
                  <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
                    <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                  </svg>
                  Featured
                </span>
              )}
            </div>

            <p class="text-gray-700 dark:text-gray-300 text-lg leading-relaxed mb-6">
              {app.description}
            </p>

            <!-- App Info Grid -->
            <div class="grid grid-cols-1 sm:grid-cols-2 gap-6 mb-8">
              <div class="space-y-4">
                <div class="flex items-center justify-between py-2 border-b border-gray-200 dark:border-gray-700">
                  <span class="text-gray-600 dark:text-gray-400">Version</span>
                  <span class="font-medium text-gray-900 dark:text-white">{app.version}</span>
                </div>
                <div class="flex items-center justify-between py-2 border-b border-gray-200 dark:border-gray-700">
                  <span class="text-gray-600 dark:text-gray-400">Size</span>
                  <span class="font-medium text-gray-900 dark:text-white">{app.size}</span>
                </div>
                <div class="flex items-center justify-between py-2 border-b border-gray-200 dark:border-gray-700">
                  <span class="text-gray-600 dark:text-gray-400">Category</span>
                  <span class="font-medium text-gray-900 dark:text-white">{app.category}</span>
                </div>
                <div class="flex items-center justify-between py-2 border-b border-gray-200 dark:border-gray-700">
                  <span class="text-gray-600 dark:text-gray-400">Price</span>
                  <span class="font-medium text-gray-900 dark:text-white">{app.price}</span>
                </div>
              </div>
              
              <div class="space-y-4">
                <div class="flex items-center justify-between py-2 border-b border-gray-200 dark:border-gray-700">
                  <span class="text-gray-600 dark:text-gray-400">Publisher</span>
                  <span class="font-medium text-gray-900 dark:text-white">{app.publisher}</span>
                </div>
                <div class="flex items-center justify-between py-2 border-b border-gray-200 dark:border-gray-700">
                  <span class="text-gray-600 dark:text-gray-400">Requirements</span>
                  <span class="font-medium text-gray-900 dark:text-white">{app.requirements}</span>
                </div>
                <div class="flex items-center justify-between py-2 border-b border-gray-200 dark:border-gray-700">
                  <span class="text-gray-600 dark:text-gray-400">Platform</span>
                  <span class="font-medium text-gray-900 dark:text-white">{app.platform}</span>
                </div>
                <div class="flex items-center justify-between py-2 border-b border-gray-200 dark:border-gray-700">
                  <span class="text-gray-600 dark:text-gray-400">Last Updated</span>
                  <span class="font-medium text-gray-900 dark:text-white">{app.last_updated}</span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Features Section -->
    {app.features && app.features.length > 0 && (
      <section class="py-12 bg-gray-50 dark:bg-gray-900">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-8">Features</h2>
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {app.features.map((feature, index) => (
              <div class="flex items-start gap-3 p-4 bg-white dark:bg-gray-800 rounded-xl shadow-sm">
                <div class="w-8 h-8 bg-green-100 dark:bg-green-900 rounded-lg flex items-center justify-center flex-shrink-0">
                  <svg class="w-4 h-4 text-green-600 dark:text-green-400" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                  </svg>
                </div>
                <span class="text-gray-700 dark:text-gray-300">{feature}</span>
              </div>
            ))}
          </div>
        </div>
      </section>
    )}

    <!-- MOD Info Section -->
    {app.mod_info && app.mod_info.length > 0 && (
      <section class="py-12 bg-white dark:bg-gray-800">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-8">MOD Information</h2>
          <div class="bg-gradient-to-r from-red-50 to-pink-50 dark:from-red-900/20 dark:to-pink-900/20 rounded-2xl p-8">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
              {app.mod_info.map((info, index) => (
                <div class="flex items-start gap-3">
                  <div class="w-8 h-8 bg-red-100 dark:bg-red-900 rounded-lg flex items-center justify-center flex-shrink-0">
                    <svg class="w-4 h-4 text-red-600 dark:text-red-400" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
                      <path d="M13 10V3L4 14h7v7l9-11h-7z"/>
                    </svg>
                  </div>
                  <span class="text-gray-700 dark:text-gray-300 font-medium">{info}</span>
                </div>
              ))}
            </div>
          </div>
        </div>
      </section>
    )}

    <!-- Screenshots Section -->
    {app.screenshots && app.screenshots.length > 0 && (
      <section class="py-12 bg-gray-50 dark:bg-gray-900">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-8">Screenshots</h2>
          <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
            {app.screenshots.map((screenshot, index) => (
              <div class="aspect-[9/16] bg-gray-200 dark:bg-gray-700 rounded-xl overflow-hidden shadow-lg hover:shadow-xl transition-shadow duration-200">
                <img 
                  src={screenshot} 
                  alt={`${app.name} screenshot ${index + 1}`}
                  class="w-full h-full object-cover hover:scale-105 transition-transform duration-200"
                  loading="lazy"
                />
              </div>
            ))}
          </div>
        </div>
      </section>
    )}

    <!-- Related Apps Section -->
    {relatedApps.length > 0 && (
      <section class="py-12 bg-white dark:bg-gray-800">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-8">Related Apps</h2>
          <div class="grid grid-cols-2 md:grid-cols-4 gap-6">
            {relatedApps.map(relatedApp => (
              <a href={`/${relatedApp.slug}`} class="group">
                <div class="bg-gray-50 dark:bg-gray-700 rounded-2xl p-6 text-center group-hover:bg-gray-100 dark:group-hover:bg-gray-600 transition-colors duration-200">
                  <div class="w-16 h-16 bg-gradient-to-br from-blue-500 to-purple-600 rounded-2xl flex items-center justify-center mx-auto mb-4 overflow-hidden">
                    {relatedApp.icon ? (
                      <img 
                        src={relatedApp.icon} 
                        alt={`${relatedApp.name} icon`}
                        class="w-full h-full object-cover rounded-2xl"
                        loading="lazy"
                      />
                    ) : (
                      <svg class="w-8 h-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z"/>
                      </svg>
                    )}
                  </div>
                  <h3 class="font-semibold text-gray-900 dark:text-white text-sm mb-1 truncate">{relatedApp.name}</h3>
                  <p class="text-xs text-gray-600 dark:text-gray-400">{relatedApp.category}</p>
                  <div class="flex items-center justify-center mt-2">
                    <svg class="w-3 h-3 text-yellow-400 mr-1" fill="currentColor" viewBox="0 0 20 20">
                      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                    </svg>
                    <span class="text-xs text-gray-600 dark:text-gray-400">{relatedApp.rating}</span>
                  </div>
                </div>
              </a>
            ))}
          </div>
        </div>
      </section>
    )}

  </main>
  
  <Footer />
</Layout>

<style>
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }
</style>